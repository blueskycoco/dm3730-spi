; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\mini8510\SRC\BOOTLOADER\EBOOT\NAND\flash.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_ulFlashBase| [ DATA ]
	EXPORT	|g_ulFlashLengthBytes| [ DATA ]
	EXPORT	|g_ulBPartBase| [ DATA ]
	EXPORT	|g_ulBPartLengthBytes| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_bpartBuffer| % 0x20a00

  00000			 AREA	 |.data|, DATA
	 COMMON	|s_binDio|, 0x10

|g_ulFlashBase| DCD 0x8000000
|g_ulFlashLengthBytes| DCD 0x2
|g_ulBPartBase| DCD |g_bpartBuffer|
|g_ulBPartLengthBytes| DCD 0x20a00

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OEMStartEraseFlash|
	EXPORT	|??_C@_1DO@CGLKJNGE@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@JLOIOPDF@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
; File c:\wince600\platform\mini8510\src\bootloader\eboot\nand\flash.c

  00000			 AREA	 |.pdata|, PDATA
|$T48181| DCD	|$LN9@OEMStartEr|
	DCD	0x40001501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@CGLKJNGE@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "E", 0x0, "r", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@JLOIOPDF@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "E", 0x0, "r", 0x0, "a", 0x0, "s"
	DCB	0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMStartEraseFlash| PROC

; 250  : {

  00000		 |$LN9@OEMStartEr|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M48178|
  00004	e1a0e000	 mov         lr, r0

; 251  :     BOOL rc = TRUE;
; 252  : 
; 253  : 	UNREFERENCED_PARAMETER(address);
; 254  : 	UNREFERENCED_PARAMETER(size);
; 255  : 
; 256  :     OALMSG(OAL_FUNC, (
; 257  :         L"+OEMStartEraseFlash(0x%08x, 0x%08x)\r\n", address, size
; 258  :         ));

  00008	e59f4040	 ldr         r4, [pc, #0x40]
  0000c	e5943440	 ldr         r3, [r4, #0x440]
  00010	e3130004	 tst         r3, #4
  00014	0a000004	 beq         |$LN3@OEMStartEr|
  00018	e59f002c	 ldr         r0, [pc, #0x2C]
  0001c	e1a02001	 mov         r2, r1
  00020	e1a0100e	 mov         r1, lr
  00024	eb000000	 bl          NKDbgPrintfW
  00028	e5943440	 ldr         r3, [r4, #0x440]
  0002c		 |$LN3@OEMStartEr|

; 259  :     
; 260  :     OALMSG(OAL_FUNC, (L"-OEMStartEraseFlash(rc = %d)\r\n", rc));

  0002c	e3130004	 tst         r3, #4
  00030	159f0010	 ldrne       r0, [pc, #0x10]
  00034	13a01001	 movne       r1, #1
  00038	1b000000	 blne        NKDbgPrintfW

; 261  :     return rc;

  0003c	e3a00001	 mov         r0, #1

; 262  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN10@OEMStartEr|
  00048		 |$LN11@OEMStartEr|
  00048	00000000	 DCD         |??_C@_1DO@CGLKJNGE@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0004c		 |$LN12@OEMStartEr|
  0004c	00000000	 DCD         |??_C@_1EM@JLOIOPDF@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAt?$AAa?$AAr?$AAt?$AAE?$AAr?$AAa?$AAs?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  00050		 |$LN13@OEMStartEr|
  00050	00000000	 DCD         |dpCurSettings|
  00054		 |$M48179|

			 ENDP  ; |OEMStartEraseFlash|

	EXPORT	|OEMContinueEraseFlash|

  00000			 AREA	 |.pdata|, PDATA
|$T48192| DCD	|$LN5@OEMContinu|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMContinueEraseFlash| PROC

; 275  : {

  00000		 |$LN5@OEMContinu|
  00000		 |$M48189|

; 276  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M48190|

			 ENDP  ; |OEMContinueEraseFlash|

	EXPORT	|OEMFinishEraseFlash|

  00000			 AREA	 |.pdata|, PDATA
|$T48201| DCD	|$LN5@OEMFinishE|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMFinishEraseFlash| PROC

; 289  : {

  00000		 |$LN5@OEMFinishE|
  00000		 |$M48198|

; 290  :     BOOL rc = TRUE;
; 291  : 
; 292  :     return rc;

  00000	e3a00001	 mov         r0, #1

; 293  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M48199|

			 ENDP  ; |OEMFinishEraseFlash|

	EXPORT	|??_C@_1DI@PEICDJAI@?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@INEHPIOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@NFAJELED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAL?$AAo?$AAg?$AAo?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@DLIAFJMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@GPKMPIMP@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf@| [ DATA ] ; `string'
	IMPORT	|OALFlashStoreClose|
	IMPORT	|OALFlashStoreWrite|
	IMPORT	|OEMMapMemAddr|
	IMPORT	|OALFlashStoreBlockSize|
	IMPORT	|OALFlashStoreSectorSize|
	IMPORT	|OALFlashStoreOpen|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T48226| DCD	|$LN20@WriteFlash|
	DCD	0x40005002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@PEICDJAI@?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "p", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@INEHPIOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "A", 0x0, "L"
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@NFAJELED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAL?$AAo?$AAg?$AAo?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "L", 0x0, "o", 0x0, "g"
	DCB	0x0, "o", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, "o", 0x0, " "
	DCB	0x0, "b", 0x0, "i", 0x0, "g", 0x0, " ", 0x0, "(", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "x", 0x0, "i", 0x0, "m", 0x0, "u"
	DCB	0x0, "m", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@DLIAFJMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "A", 0x0, "L"
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e", 0x0, "O", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@GPKMPIMP@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, "n", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " "
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WriteFlashLogo| PROC

; 596  : {

  00000		 |$LN20@WriteFlash|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M48223|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a08000	 mov         r8, r0

; 597  :     BOOL rc = FALSE;
; 598  :     HANDLE hFlash = NULL;
; 599  :     UINT8 *pData;
; 600  :     UINT32 offset;
; 601  : 
; 602  :     OALMSG(OAL_INFO, (L"\r\nWriting Splashcreen image to flash memory\r\n"));

  00010	e59f4124	 ldr         r4, [pc, #0x124]
  00014	e3a07000	 mov         r7, #0
  00018	e5943440	 ldr         r3, [r4, #0x440]
  0001c	e3130008	 tst         r3, #8
  00020	159f0110	 ldrne       r0, [pc, #0x110]
  00024	1b000000	 blne        NKDbgPrintfW

; 603  : 
; 604  :     // Open flash storage
; 605  :     hFlash = OALFlashStoreOpen(g_ulFlashBase);

  00028	e59f3104	 ldr         r3, [pc, #0x104]
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          OALFlashStoreOpen
  00034	e1b06000	 movs        r6, r0

; 606  :     if (hFlash == NULL)

  00038	1a000005	 bne         |$LN5@WriteFlash|

; 607  :         {
; 608  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 609  :             L"OALFlashStoreOpen call failed!\r\n"
; 610  :             ));

  0003c	e5943440	 ldr         r3, [r4, #0x440]
  00040	e3130001	 tst         r3, #1
  00044	0a000032	 beq         |$LN1@WriteFlash|
  00048	e59f00e0	 ldr         r0, [pc, #0xE0]
  0004c	eb000000	 bl          NKDbgPrintfW

; 611  :         goto cleanUp;

  00050	ea00002f	 b           |$LN1@WriteFlash|
  00054		 |$LN5@WriteFlash|

; 612  :         }
; 613  : 
; 614  :     // Check if image fit (last sector used for configuration)
; 615  :     if (size > (IMAGE_BOOTLOADER_BITMAP_SIZE - OALFlashStoreSectorSize(hFlash)))

  00054	e1a00006	 mov         r0, r6
  00058	eb000000	 bl          OALFlashStoreSectorSize
  0005c	e2603601	 rsb         r3, r0, #1, 12
  00060	e1550003	 cmp         r5, r3
  00064	9a00000a	 bls         |$LN4@WriteFlash|

; 616  :         {
; 617  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 618  :             L"Logo image too big (size 0x%08x, maximum size 0x%08x)\r\n",
; 619  :             size, IMAGE_BOOTLOADER_BITMAP_SIZE - OALFlashStoreBlockSize(hFlash)
; 620  :             ));

  00068	e5943440	 ldr         r3, [r4, #0x440]
  0006c	e3130001	 tst         r3, #1
  00070	0a000025	 beq         |$cleanUp$47933|
  00074	e1a00006	 mov         r0, r6
  00078	eb000000	 bl          OALFlashStoreBlockSize
  0007c	e1a03000	 mov         r3, r0
  00080	e59f00a4	 ldr         r0, [pc, #0xA4]
  00084	e2632601	 rsb         r2, r3, #1, 12
  00088	e1a01005	 mov         r1, r5
  0008c	eb000000	 bl          NKDbgPrintfW

; 621  :         goto cleanUp;

  00090	ea00001d	 b           |$cleanUp$47933|
  00094		 |$LN4@WriteFlash|

; 622  :         }
; 623  : 
; 624  :     // Get data location
; 625  :     pData = OEMMapMemAddr(address, address);

  00094	e1a01008	 mov         r1, r8
  00098	e1a00008	 mov         r0, r8
  0009c	eb000000	 bl          OEMMapMemAddr
  000a0	e1a08000	 mov         r8, r0

; 626  : 
; 627  :     // Fill unused space with 0xFF
; 628  :     if (size < IMAGE_BOOTLOADER_BITMAP_SIZE)

  000a4	e3550601	 cmp         r5, #1, 12

; 629  :         {
; 630  :         memset(pData + size, 0xFF, IMAGE_BOOTLOADER_BITMAP_SIZE - size);

  000a8	30880005	 addcc       r0, r8, r5
  000ac	32652601	 rsbcc       r2, r5, #1, 12
  000b0	33a010ff	 movcc       r1, #0xFF
  000b4	3b000000	 blcc        memset

; 631  :         }
; 632  : 
; 633  :     offset = IMAGE_XLDR_BOOTSEC_NAND_SIZE + IMAGE_EBOOT_BOOTSEC_NAND_SIZE;
; 634  :     if (!OALFlashStoreWrite(
; 635  :             hFlash, offset, pData, IMAGE_BOOTLOADER_BITMAP_SIZE, FALSE, FALSE
; 636  :             ))

  000b8	e3a0e000	 mov         lr, #0
  000bc	e3a03601	 mov         r3, #1, 12
  000c0	e1a02008	 mov         r2, r8
  000c4	e3a01703	 mov         r1, #3, 14
  000c8	e1a00006	 mov         r0, r6
  000cc	e58de004	 str         lr, [sp, #4]
  000d0	e58de000	 str         lr, [sp]
  000d4	eb000000	 bl          OALFlashStoreWrite

; 637  :         {
; 638  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 639  :             L"OALFlashStoreWrite at relative address 0x%08x failed\r\n", offset
; 640  :             ));

  000d8	e5943440	 ldr         r3, [r4, #0x440]
  000dc	e3500000	 cmp         r0, #0
  000e0	1a000005	 bne         |$LN2@WriteFlash|
  000e4	e3130001	 tst         r3, #1
  000e8	0a000007	 beq         |$cleanUp$47933|
  000ec	e59f0034	 ldr         r0, [pc, #0x34]
  000f0	e3a01703	 mov         r1, #3, 14
  000f4	eb000000	 bl          NKDbgPrintfW

; 641  :         goto cleanUp;

  000f8	ea000003	 b           |$cleanUp$47933|
  000fc		 |$LN2@WriteFlash|

; 642  :         }
; 643  : 
; 644  :     OALMSG(OAL_INFO, (L"Splashcreen image written\r\n"));

  000fc	e3130008	 tst         r3, #8
  00100	159f001c	 ldrne       r0, [pc, #0x1C]
  00104	1b000000	 blne        NKDbgPrintfW

; 645  : 
; 646  :     // Done
; 647  :     rc = TRUE;

  00108	e3a07001	 mov         r7, #1
  0010c		 |$cleanUp$47933|

; 648  : 
; 649  : cleanUp:
; 650  :     if (hFlash != NULL) OALFlashStoreClose(hFlash);

  0010c	e1a00006	 mov         r0, r6
  00110	eb000000	 bl          OALFlashStoreClose
  00114		 |$LN1@WriteFlash|

; 651  :     return rc;
; 652  : }

  00114	e1a00007	 mov         r0, r7
  00118	e28dd008	 add         sp, sp, #8
  0011c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$LN21@WriteFlash|
  00124		 |$LN22@WriteFlash|
  00124	00000000	 DCD         |??_C@_1DI@PEICDJAI@?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  00128		 |$LN23@WriteFlash|
  00128	00000000	 DCD         |??_C@_1JK@INEHPIOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  0012c		 |$LN24@WriteFlash|
  0012c	00000000	 DCD         |??_C@_1JM@NFAJELED@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAL?$AAo?$AAg?$AAo?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@|
  00130		 |$LN25@WriteFlash|
  00130	00000000	 DCD         |??_C@_1GO@DLIAFJMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  00134		 |$LN26@WriteFlash|
  00134	00000000	 DCD         |g_ulFlashBase|
  00138		 |$LN27@WriteFlash|
  00138	00000000	 DCD         |??_C@_1FM@GPKMPIMP@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAl?$AAa?$AAs?$AAh?$AAc?$AAr?$AAe?$AAe?$AAn?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf@|
  0013c		 |$LN28@WriteFlash|
  0013c	00000000	 DCD         |dpCurSettings|
  00140		 |$M48224|

			 ENDP  ; |WriteFlashLogo|

	EXPORT	|??_C@_1GG@PLILEPKK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FHNOBDCD@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@OMMGJENJ@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@JNDLGIKF@?$AA?5?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@NKNNLDBD@?$AA?5?$AA?5?$AAM?$AAi?$AAs?$AAc?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@JJJOHJHH@?$AA?5?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@CCJIKKIG@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@LPBHAOCK@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IABJILGI@?$AA?5?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAS?$AAy?$AAs?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAP?$AAe?$AAr?$AAc?$AAe?$AAn?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@GDFJIFCF@?$AA?5?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AA?5?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@NPCIPKAK@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@GLFGIGFP@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@INEFBELC@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FEMDLBGI@?$AA?5?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@LFBMBNAO@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IKFCIHNK@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FMEPNBO@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IKCHAPAE@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@OKOEBDCJ@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@NAHCJOL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IJBGHIJL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@OOCEINF@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@FBMKGHCM@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@LHJKOBMN@?$AAR?$AAO?$AAM?$AAH?$AAD?$AAR?$AA?5?$AA?$CI?$AAp?$AAT?$AAO?$AAC?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| [ DATA ] ; `string'
	EXPORT	|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48294| DCD	|$LN57@DumpTOC|
	DCD	0x4000b701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@PLILEPKK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FHNOBDCD@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g"
	DCB	0x0, "t", 0x0, "h", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OMMGJENJ@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "M", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JNDLGIKF@?$AA?5?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "e", 0x0, "n"
	DCB	0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@NKNNLDBD@?$AA?5?$AA?5?$AAM?$AAi?$AAs?$AAc?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB " "
	DCB	0x0, " ", 0x0, "M", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, "F"
	DCB	0x0, "l", 0x0, "a", 0x0, "g", 0x0, "s", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@JJJOHJHH@?$AA?5?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB " "
	DCB	0x0, " ", 0x0, "C", 0x0, "P", 0x0, "U", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@CCJIKKIG@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "G", 0x0, "l", 0x0, "o", 0x0, "b"
	DCB	0x0, " ", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@LPBHAOCK@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "D", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "G", 0x0, "l", 0x0, "o", 0x0, "b"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IABJILGI@?$AA?5?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAS?$AAy?$AAs?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAP?$AAe?$AAr?$AAc?$AAe?$AAn?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "S"
	DCB	0x0, "y", 0x0, "s", 0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M"
	DCB	0x0, " ", 0x0, "P", 0x0, "e", 0x0, "r", 0x0, "c", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GDFJIFCF@?$AA?5?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AA?5?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "K", 0x0, "e", 0x0, "r", 0x0, "n", 0x0, "e"
	DCB	0x0, "l", 0x0, " ", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NPCIPKAK@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, " ", 0x0, "F"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "1", 0x0, "0", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GLFGIGFP@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "f", 0x0, " "
	DCB	0x0, "S", 0x0, "y", 0x0, "m", 0x0, "b", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@INEFBELC@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "f", 0x0, " "
	DCB	0x0, "S", 0x0, "y", 0x0, "m", 0x0, "b", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "L", 0x0, "e", 0x0, "n", 0x0, "g", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FEMDLBGI@?$AA?5?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@LFBMBNAO@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "p", 0x0, "y", 0x0, " ", 0x0, "E", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "1", 0x0, "0", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IKFCIHNK@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M", 0x0, " ", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FMEPNBO@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M", 0x0, " ", 0x0, "F"
	DCB	0x0, "r", 0x0, "e", 0x0, "e", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IKCHAPAE@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "R", 0x0, "A", 0x0, "M", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OKOEBDCJ@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "m", 0x0, " ", 0x0, "M"
	DCB	0x0, "o", 0x0, "d", 0x0, "u", 0x0, "l", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "1", 0x0, "0", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NAHCJOL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "L", 0x0, "a"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IJBGHIJL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "P", 0x0, "h", 0x0, "y", 0x0, "s", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "F", 0x0, "i"
	DCB	0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OOCEINF@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, " ", 0x0, "L"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@FBMKGHCM@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@| DCB " "
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, " ", 0x0, "F"
	DCB	0x0, "i", 0x0, "r", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, ":", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@LHJKOBMN@?$AAR?$AAO?$AAM?$AAH?$AAD?$AAR?$AA?5?$AA?$CI?$AAp?$AAT?$AAO?$AAC?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@| DCB "R"
	DCB	0x0, "O", 0x0, "M", 0x0, "H", 0x0, "D", 0x0, "R", 0x0, " "
	DCB	0x0, "(", 0x0, "p", 0x0, "T", 0x0, "O", 0x0, "C", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-", 0x0, "-"
	DCB	0x0, "-", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DumpTOC| PROC

; 660  : {

  00000		 |$LN57@DumpTOC|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M48291|
  00004	e1a05000	 mov         r5, r0

; 661  : 	UNREFERENCED_PARAMETER(pTOC);
; 662  : 
; 663  :     // Print out ROMHDR information
; 664  :     OALMSG(OAL_INFO, (L"\r\n"));

  00008	e59f42c8	 ldr         r4, [pc, #0x2C8]
  0000c	e5943440	 ldr         r3, [r4, #0x440]
  00010	e3130008	 tst         r3, #8
  00014	0a000002	 beq         |$LN3@DumpTOC|
  00018	e59f0254	 ldr         r0, [pc, #0x254]
  0001c	eb000000	 bl          NKDbgPrintfW
  00020	e5943440	 ldr         r3, [r4, #0x440]
  00024		 |$LN3@DumpTOC|

; 665  :     OALMSG(OAL_INFO, (L"ROMHDR (pTOC = 0x%08x) ---------------------\r\n", pTOC));

  00024	e3130008	 tst         r3, #8
  00028	0a000003	 beq         |$LN5@DumpTOC|
  0002c	e59f02a0	 ldr         r0, [pc, #0x2A0]
  00030	e1a01005	 mov         r1, r5
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e5943440	 ldr         r3, [r4, #0x440]
  0003c		 |$LN5@DumpTOC|

; 666  :     OALMSG(OAL_INFO, (L"  DLL First           : 0x%08x\r\n", pTOC->dllfirst));

  0003c	e3130008	 tst         r3, #8
  00040	0a000003	 beq         |$LN7@DumpTOC|
  00044	e5951000	 ldr         r1, [r5]
  00048	e59f0280	 ldr         r0, [pc, #0x280]
  0004c	eb000000	 bl          NKDbgPrintfW
  00050	e5943440	 ldr         r3, [r4, #0x440]
  00054		 |$LN7@DumpTOC|

; 667  :     OALMSG(OAL_INFO, (L"  DLL Last            : 0x%08x\r\n", pTOC->dlllast));

  00054	e3130008	 tst         r3, #8
  00058	0a000003	 beq         |$LN9@DumpTOC|
  0005c	e5951004	 ldr         r1, [r5, #4]
  00060	e59f0264	 ldr         r0, [pc, #0x264]
  00064	eb000000	 bl          NKDbgPrintfW
  00068	e5943440	 ldr         r3, [r4, #0x440]
  0006c		 |$LN9@DumpTOC|

; 668  :     OALMSG(OAL_INFO, (L"  Physical First      : 0x%08x\r\n", pTOC->physfirst));

  0006c	e3130008	 tst         r3, #8
  00070	0a000003	 beq         |$LN11@DumpTOC|
  00074	e5951008	 ldr         r1, [r5, #8]
  00078	e59f0248	 ldr         r0, [pc, #0x248]
  0007c	eb000000	 bl          NKDbgPrintfW
  00080	e5943440	 ldr         r3, [r4, #0x440]
  00084		 |$LN11@DumpTOC|

; 669  :     OALMSG(OAL_INFO, (L"  Physical Last       : 0x%08x\r\n", pTOC->physlast));

  00084	e3130008	 tst         r3, #8
  00088	0a000003	 beq         |$LN13@DumpTOC|
  0008c	e595100c	 ldr         r1, [r5, #0xC]
  00090	e59f022c	 ldr         r0, [pc, #0x22C]
  00094	eb000000	 bl          NKDbgPrintfW
  00098	e5943440	 ldr         r3, [r4, #0x440]
  0009c		 |$LN13@DumpTOC|

; 670  :     OALMSG(OAL_INFO, (L"  Num Modules         : %10d\r\n",   pTOC->nummods));

  0009c	e3130008	 tst         r3, #8
  000a0	0a000003	 beq         |$LN15@DumpTOC|
  000a4	e5951010	 ldr         r1, [r5, #0x10]
  000a8	e59f0210	 ldr         r0, [pc, #0x210]
  000ac	eb000000	 bl          NKDbgPrintfW
  000b0	e5943440	 ldr         r3, [r4, #0x440]
  000b4		 |$LN15@DumpTOC|

; 671  :     OALMSG(OAL_INFO, (L"  RAM Start           : 0x%08x\r\n", pTOC->ulRAMStart));

  000b4	e3130008	 tst         r3, #8
  000b8	0a000003	 beq         |$LN17@DumpTOC|
  000bc	e5951014	 ldr         r1, [r5, #0x14]
  000c0	e59f01f4	 ldr         r0, [pc, #0x1F4]
  000c4	eb000000	 bl          NKDbgPrintfW
  000c8	e5943440	 ldr         r3, [r4, #0x440]
  000cc		 |$LN17@DumpTOC|

; 672  :     OALMSG(OAL_INFO, (L"  RAM Free            : 0x%08x\r\n", pTOC->ulRAMFree));

  000cc	e3130008	 tst         r3, #8
  000d0	0a000003	 beq         |$LN19@DumpTOC|
  000d4	e5951018	 ldr         r1, [r5, #0x18]
  000d8	e59f01d8	 ldr         r0, [pc, #0x1D8]
  000dc	eb000000	 bl          NKDbgPrintfW
  000e0	e5943440	 ldr         r3, [r4, #0x440]
  000e4		 |$LN19@DumpTOC|

; 673  :     OALMSG(OAL_INFO, (L"  RAM End             : 0x%08x\r\n", pTOC->ulRAMEnd));

  000e4	e3130008	 tst         r3, #8
  000e8	0a000003	 beq         |$LN21@DumpTOC|
  000ec	e595101c	 ldr         r1, [r5, #0x1C]
  000f0	e59f01bc	 ldr         r0, [pc, #0x1BC]
  000f4	eb000000	 bl          NKDbgPrintfW
  000f8	e5943440	 ldr         r3, [r4, #0x440]
  000fc		 |$LN21@DumpTOC|

; 674  :     OALMSG(OAL_INFO, (L"  Num Copy Entries    : %10d\r\n",   pTOC->ulCopyEntries));

  000fc	e3130008	 tst         r3, #8
  00100	0a000003	 beq         |$LN23@DumpTOC|
  00104	e5951020	 ldr         r1, [r5, #0x20]
  00108	e59f01a0	 ldr         r0, [pc, #0x1A0]
  0010c	eb000000	 bl          NKDbgPrintfW
  00110	e5943440	 ldr         r3, [r4, #0x440]
  00114		 |$LN23@DumpTOC|

; 675  :     OALMSG(OAL_INFO, (L"  Copy Entries Offset : 0x%08x\r\n", pTOC->ulCopyOffset));

  00114	e3130008	 tst         r3, #8
  00118	0a000003	 beq         |$LN25@DumpTOC|
  0011c	e5951024	 ldr         r1, [r5, #0x24]
  00120	e59f0184	 ldr         r0, [pc, #0x184]
  00124	eb000000	 bl          NKDbgPrintfW
  00128	e5943440	 ldr         r3, [r4, #0x440]
  0012c		 |$LN25@DumpTOC|

; 676  :     OALMSG(OAL_INFO, (L"  Prof Symbol Length  : 0x%08x\r\n", pTOC->ulProfileLen));

  0012c	e3130008	 tst         r3, #8
  00130	0a000003	 beq         |$LN27@DumpTOC|
  00134	e5951028	 ldr         r1, [r5, #0x28]
  00138	e59f0168	 ldr         r0, [pc, #0x168]
  0013c	eb000000	 bl          NKDbgPrintfW
  00140	e5943440	 ldr         r3, [r4, #0x440]
  00144		 |$LN27@DumpTOC|

; 677  :     OALMSG(OAL_INFO, (L"  Prof Symbol Offset  : 0x%08x\r\n", pTOC->ulProfileOffset));

  00144	e3130008	 tst         r3, #8
  00148	0a000003	 beq         |$LN29@DumpTOC|
  0014c	e595102c	 ldr         r1, [r5, #0x2C]
  00150	e59f014c	 ldr         r0, [pc, #0x14C]
  00154	eb000000	 bl          NKDbgPrintfW
  00158	e5943440	 ldr         r3, [r4, #0x440]
  0015c		 |$LN29@DumpTOC|

; 678  :     OALMSG(OAL_INFO, (L"  Num Files           : %10d\r\n",   pTOC->numfiles));

  0015c	e3130008	 tst         r3, #8
  00160	0a000003	 beq         |$LN31@DumpTOC|
  00164	e5951030	 ldr         r1, [r5, #0x30]
  00168	e59f0130	 ldr         r0, [pc, #0x130]
  0016c	eb000000	 bl          NKDbgPrintfW
  00170	e5943440	 ldr         r3, [r4, #0x440]
  00174		 |$LN31@DumpTOC|

; 679  :     OALMSG(OAL_INFO, (L"  Kernel Flags        : 0x%08x\r\n", pTOC->ulKernelFlags));

  00174	e3130008	 tst         r3, #8
  00178	0a000003	 beq         |$LN33@DumpTOC|
  0017c	e5951034	 ldr         r1, [r5, #0x34]
  00180	e59f0114	 ldr         r0, [pc, #0x114]
  00184	eb000000	 bl          NKDbgPrintfW
  00188	e5943440	 ldr         r3, [r4, #0x440]
  0018c		 |$LN33@DumpTOC|

; 680  :     OALMSG(OAL_INFO, (L"  FileSys RAM Percent : 0x%08x\r\n", pTOC->ulFSRamPercent));

  0018c	e3130008	 tst         r3, #8
  00190	0a000003	 beq         |$LN35@DumpTOC|
  00194	e5951038	 ldr         r1, [r5, #0x38]
  00198	e59f00f8	 ldr         r0, [pc, #0xF8]
  0019c	eb000000	 bl          NKDbgPrintfW
  001a0	e5943440	 ldr         r3, [r4, #0x440]
  001a4		 |$LN35@DumpTOC|

; 681  :     OALMSG(OAL_INFO, (L"  Driver Glob Start   : 0x%08x\r\n", pTOC->ulDrivglobStart));

  001a4	e3130008	 tst         r3, #8
  001a8	0a000003	 beq         |$LN37@DumpTOC|
  001ac	e595103c	 ldr         r1, [r5, #0x3C]
  001b0	e59f00dc	 ldr         r0, [pc, #0xDC]
  001b4	eb000000	 bl          NKDbgPrintfW
  001b8	e5943440	 ldr         r3, [r4, #0x440]
  001bc		 |$LN37@DumpTOC|

; 682  :     OALMSG(OAL_INFO, (L"  Driver Glob Length  : 0x%08x\r\n", pTOC->ulDrivglobLen));

  001bc	e3130008	 tst         r3, #8
  001c0	0a000003	 beq         |$LN39@DumpTOC|
  001c4	e5951040	 ldr         r1, [r5, #0x40]
  001c8	e59f00c0	 ldr         r0, [pc, #0xC0]
  001cc	eb000000	 bl          NKDbgPrintfW
  001d0	e5943440	 ldr         r3, [r4, #0x440]
  001d4		 |$LN39@DumpTOC|

; 683  :     OALMSG(OAL_INFO, (L"  CPU                 :     0x%04x\r\n", pTOC->usCPUType));

  001d4	e3130008	 tst         r3, #8
  001d8	0a000003	 beq         |$LN41@DumpTOC|
  001dc	e1d514b4	 ldrh        r1, [r5, #0x44]
  001e0	e59f00a4	 ldr         r0, [pc, #0xA4]
  001e4	eb000000	 bl          NKDbgPrintfW
  001e8	e5943440	 ldr         r3, [r4, #0x440]
  001ec		 |$LN41@DumpTOC|

; 684  :     OALMSG(OAL_INFO, (L"  MiscFlags           :     0x%04x\r\n", pTOC->usMiscFlags));

  001ec	e3130008	 tst         r3, #8
  001f0	0a000003	 beq         |$LN43@DumpTOC|
  001f4	e1d514b6	 ldrh        r1, [r5, #0x46]
  001f8	e59f0088	 ldr         r0, [pc, #0x88]
  001fc	eb000000	 bl          NKDbgPrintfW
  00200	e5943440	 ldr         r3, [r4, #0x440]
  00204		 |$LN43@DumpTOC|

; 685  :     OALMSG(OAL_INFO, (L"  Extensions          : 0x%08x\r\n", pTOC->pExtensions));

  00204	e3130008	 tst         r3, #8
  00208	0a000003	 beq         |$LN45@DumpTOC|
  0020c	e5951048	 ldr         r1, [r5, #0x48]
  00210	e59f006c	 ldr         r0, [pc, #0x6C]
  00214	eb000000	 bl          NKDbgPrintfW
  00218	e5943440	 ldr         r3, [r4, #0x440]
  0021c		 |$LN45@DumpTOC|

; 686  :     OALMSG(OAL_INFO, (L"  Tracking Mem Start  : 0x%08x\r\n", pTOC->ulTrackingStart));

  0021c	e3130008	 tst         r3, #8
  00220	0a000003	 beq         |$LN47@DumpTOC|
  00224	e595104c	 ldr         r1, [r5, #0x4C]
  00228	e59f0050	 ldr         r0, [pc, #0x50]
  0022c	eb000000	 bl          NKDbgPrintfW
  00230	e5943440	 ldr         r3, [r4, #0x440]
  00234		 |$LN47@DumpTOC|

; 687  :     OALMSG(OAL_INFO, (L"  Tracking Mem Length : 0x%08x\r\n", pTOC->ulTrackingLen));

  00234	e3130008	 tst         r3, #8
  00238	0a000003	 beq         |$LN49@DumpTOC|
  0023c	e5951050	 ldr         r1, [r5, #0x50]
  00240	e59f0034	 ldr         r0, [pc, #0x34]
  00244	eb000000	 bl          NKDbgPrintfW
  00248	e5943440	 ldr         r3, [r4, #0x440]
  0024c		 |$LN49@DumpTOC|

; 688  :     OALMSG(OAL_INFO, (L"------------------------------------------------\r\n"));

  0024c	e3130008	 tst         r3, #8
  00250	0a000002	 beq         |$LN51@DumpTOC|
  00254	e59f001c	 ldr         r0, [pc, #0x1C]
  00258	eb000000	 bl          NKDbgPrintfW
  0025c	e5943440	 ldr         r3, [r4, #0x440]
  00260		 |$LN51@DumpTOC|

; 689  :     OALMSG(OAL_INFO, (L"\r\n"));

  00260	e3130008	 tst         r3, #8
  00264	159f0008	 ldrne       r0, [pc, #8]
  00268	1b000000	 blne        NKDbgPrintfW

; 690  : }

  0026c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00270	e12fff1e	 bx          lr
  00274		 |$LN58@DumpTOC|
  00274		 |$LN59@DumpTOC|
  00274	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  00278		 |$LN60@DumpTOC|
  00278	00000000	 DCD         |??_C@_1GG@PLILEPKK@?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  0027c		 |$LN61@DumpTOC|
  0027c	00000000	 DCD         |??_C@_1EC@FHNOBDCD@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  00280		 |$LN62@DumpTOC|
  00280	00000000	 DCD         |??_C@_1EC@OMMGJENJ@?$AA?5?$AA?5?$AAT?$AAr?$AAa?$AAc?$AAk?$AAi?$AAn?$AAg?$AA?5?$AAM?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  00284		 |$LN63@DumpTOC|
  00284	00000000	 DCD         |??_C@_1EC@JNDLGIKF@?$AA?5?$AA?5?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  00288		 |$LN64@DumpTOC|
  00288	00000000	 DCD         |??_C@_1EK@NKNNLDBD@?$AA?5?$AA?5?$AAM?$AAi?$AAs?$AAc?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  0028c		 |$LN65@DumpTOC|
  0028c	00000000	 DCD         |??_C@_1EK@JJJOHJHH@?$AA?5?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  00290		 |$LN66@DumpTOC|
  00290	00000000	 DCD         |??_C@_1EC@CCJIKKIG@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  00294		 |$LN67@DumpTOC|
  00294	00000000	 DCD         |??_C@_1EC@LPBHAOCK@?$AA?5?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAG?$AAl?$AAo?$AAb?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  00298		 |$LN68@DumpTOC|
  00298	00000000	 DCD         |??_C@_1EC@IABJILGI@?$AA?5?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAS?$AAy?$AAs?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAP?$AAe?$AAr?$AAc?$AAe?$AAn?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  0029c		 |$LN69@DumpTOC|
  0029c	00000000	 DCD         |??_C@_1EC@GDFJIFCF@?$AA?5?$AA?5?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AA?5?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002a0		 |$LN70@DumpTOC|
  002a0	00000000	 DCD         |??_C@_1DO@NPCIPKAK@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002a4		 |$LN71@DumpTOC|
  002a4	00000000	 DCD         |??_C@_1EC@GLFGIGFP@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002a8		 |$LN72@DumpTOC|
  002a8	00000000	 DCD         |??_C@_1EC@INEFBELC@?$AA?5?$AA?5?$AAP?$AAr?$AAo?$AAf?$AA?5?$AAS?$AAy?$AAm?$AAb?$AAo?$AAl?$AA?5?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002ac		 |$LN73@DumpTOC|
  002ac	00000000	 DCD         |??_C@_1EC@FEMDLBGI@?$AA?5?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002b0		 |$LN74@DumpTOC|
  002b0	00000000	 DCD         |??_C@_1DO@LFBMBNAO@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAC?$AAo?$AAp?$AAy?$AA?5?$AAE?$AAn?$AAt?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002b4		 |$LN75@DumpTOC|
  002b4	00000000	 DCD         |??_C@_1EC@IKFCIHNK@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAE?$AAn?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002b8		 |$LN76@DumpTOC|
  002b8	00000000	 DCD         |??_C@_1EC@FMEPNBO@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAF?$AAr?$AAe?$AAe?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002bc		 |$LN77@DumpTOC|
  002bc	00000000	 DCD         |??_C@_1EC@IKCHAPAE@?$AA?5?$AA?5?$AAR?$AAA?$AAM?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002c0		 |$LN78@DumpTOC|
  002c0	00000000	 DCD         |??_C@_1DO@OKOEBDCJ@?$AA?5?$AA?5?$AAN?$AAu?$AAm?$AA?5?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA?$CF?$AA1?$AA0?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  002c4		 |$LN79@DumpTOC|
  002c4	00000000	 DCD         |??_C@_1EC@NAHCJOL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002c8		 |$LN80@DumpTOC|
  002c8	00000000	 DCD         |??_C@_1EC@IJBGHIJL@?$AA?5?$AA?5?$AAP?$AAh?$AAy?$AAs?$AAi?$AAc?$AAa?$AAl?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002cc		 |$LN81@DumpTOC|
  002cc	00000000	 DCD         |??_C@_1EC@OOCEINF@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAL?$AAa?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002d0		 |$LN82@DumpTOC|
  002d0	00000000	 DCD         |??_C@_1EC@FBMKGHCM@?$AA?5?$AA?5?$AAD?$AAL?$AAL?$AA?5?$AAF?$AAi?$AAr?$AAs?$AAt?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?3?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6@|
  002d4		 |$LN83@DumpTOC|
  002d4	00000000	 DCD         |??_C@_1FO@LHJKOBMN@?$AAR?$AAO?$AAM?$AAH?$AAD?$AAR?$AA?5?$AA?$CI?$AAp?$AAT?$AAO?$AAC?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9?$AA?9@|
  002d8		 |$LN84@DumpTOC|
  002d8	00000000	 DCD         |dpCurSettings|
  002dc		 |$M48292|

			 ENDP  ; |DumpTOC|


  00000			 AREA	 |.pdata|, PDATA
|$T48335| DCD	|$LN7@VerifyImag|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |VerifyImage| PROC

; 699  : {

  00000		 |$LN7@VerifyImag|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M48332|
  00004	e1a05001	 mov         r5, r1
  00008	e1a0e000	 mov         lr, r0

; 700  :     BOOL rc = FALSE;
; 701  :     UINT32 *pInfo;
; 702  :     ROMHDR *pTOC;
; 703  : 
; 704  :     // Verify that we get CE image.
; 705  :     pInfo = (UINT32*)(pData + ROM_SIGNATURE_OFFSET);

  0000c	e1a0100e	 mov         r1, lr

; 706  :     if (*pInfo != ROM_SIGNATURE) goto cleanUp;

  00010	e5b12040	 ldr         r2, [r1, #0x40]!
  00014	e59f302c	 ldr         r3, [pc, #0x2C]
  00018	e3a00000	 mov         r0, #0
  0001c	e1520003	 cmp         r2, r3
  00020	1a000006	 bne         |$cleanUp$48008|

; 707  : 
; 708  :     // We are on correct location....
; 709  :     pTOC = (ROMHDR*)(pData + pInfo[2]);

  00024	e5913008	 ldr         r3, [r1, #8]
  00028	e083400e	 add         r4, r3, lr

; 710  : 
; 711  :     // Let see
; 712  :     DumpTOC(pTOC);

  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          DumpTOC

; 713  : 
; 714  :     // Return pTOC if pointer isn't NULL
; 715  :     if (ppTOC != NULL) *ppTOC = pTOC;

  00034	e3550000	 cmp         r5, #0
  00038	15854000	 strne       r4, [r5]

; 716  : 
; 717  :     // Done
; 718  :     rc = TRUE;

  0003c	e3a00001	 mov         r0, #1
  00040		 |$cleanUp$48008|

; 719  : 
; 720  : cleanUp:
; 721  :     return rc;
; 722  : }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN8@VerifyImag|
  00048		 |$LN9@VerifyImag|
  00048	43454345	 DCD         0x43454345
  0004c		 |$M48333|

			 ENDP  ; |VerifyImage|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|BLConfigureFlashPartitions|
	EXPORT	|??_C@_1DC@CJMIMBMC@?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@EELLBIAJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FBHNJDFD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@NDGHMEGF@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LE@KHIPBHLF@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PANFDMBA@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@PGPDCKHA@?$AAB?$AAL?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAP?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo@| [ DATA ] ; `string'
	IMPORT	|BP_LowLevelFormat|
	IMPORT	|BP_GetPartitionInfo|
	IMPORT	|BP_OpenPartition|
	IMPORT	|g_bootCfg|
	IMPORT	|BP_Init|
	IMPORT	|FMD_Deinit|
	IMPORT	|FMD_GetInfo|
	IMPORT	|FMD_Init|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__rt_udiv|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T48360| DCD	|$LN16@BLConfigur|
	DCD	0xc0008302

  00000			 AREA	 |.xdata|, DATA
|$T48356| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CJMIMBMC@?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@EELLBIAJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "!", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FBHNJDFD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "O", 0x0, "S", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@NDGHMEGF@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@KHIPBHLF@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAf@| DCB "O"
	DCB	0x0, "S", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "t"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "f", 0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PANFDMBA@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "S", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@PGPDCKHA@?$AAB?$AAL?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAP?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo@| DCB "B"
	DCB	0x0, "L", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i"
	DCB	0x0, "g", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, "F", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "b", 0x0, "o"
	DCB	0x0, "o", 0x0, "t", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "l", 0x0, "i", 0x0, "b", 0x0, "r", 0x0, "a"
	DCB	0x0, "r", 0x0, "y", 0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T48356|

  00008		 |BLConfigureFlashPartitions| PROC

; 727  : {

  00008		 |$LN16@BLConfigur|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24ddfe6	 sub         sp, sp, #0xE6, 30
  00010		 |$M48357|
  00010	e1a07000	 mov         r7, r0
  00014	e59f31f4	 ldr         r3, [pc, #0x1F4]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3394	 str         r3, [sp, #0x394]

; 728  :     BOOL rc = FALSE;
; 729  :     HANDLE hFMD;
; 730  :     PCI_REG_INFO regInfo;
; 731  :     FlashInfo flashInfo;
; 732  :     HANDLE hPartition;
; 733  :     PPARTENTRY pPartitionEntry;
; 734  :     DWORD dwBootPartitionSectorCount;
; 735  : 
; 736  :     memset(&regInfo, 0, sizeof(PCI_REG_INFO));

  00020	e3a02d0e	 mov         r2, #0xE, 26
  00024	e3a01000	 mov         r1, #0
  00028	e28d0014	 add         r0, sp, #0x14
  0002c	e3a05000	 mov         r5, #0
  00030	eb000000	 bl          memset

; 737  :     regInfo.MemBase.Num    = 1;
; 738  :     regInfo.MemLen.Num     = 1;
; 739  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  00034	e59f41d0	 ldr         r4, [pc, #0x1D0]
  00038	e3a0e001	 mov         lr, #1
  0003c	e3a06001	 mov         r6, #1
  00040	e5943000	 ldr         r3, [r4]

; 740  :     
; 741  :     // Get flash info
; 742  :     hFMD = FMD_Init(NULL, &regInfo, NULL);

  00044	e3a02000	 mov         r2, #0
  00048	e28d1014	 add         r1, sp, #0x14
  0004c	e3a00000	 mov         r0, #0
  00050	e58d3324	 str         r3, [sp, #0x324]
  00054	e58de320	 str         lr, [sp, #0x320]
  00058	e58d633c	 str         r6, [sp, #0x33C]
  0005c	eb000000	 bl          FMD_Init
  00060	e1b06000	 movs        r6, r0

; 743  :     if (hFMD == NULL)

  00064	0a00005a	 beq         |$cleanUp$48027|

; 744  :         goto cleanUp;
; 745  : 
; 746  :     if (!FMD_GetInfo(&flashInfo))

  00068	e28d0004	 add         r0, sp, #4
  0006c	eb000000	 bl          FMD_GetInfo
  00070	e3500000	 cmp         r0, #0
  00074	0a000056	 beq         |$cleanUp$48027|

; 747  :         goto cleanUp;
; 748  :     
; 749  :     FMD_Deinit(hFMD);

  00078	e1a00006	 mov         r0, r6
  0007c	eb000000	 bl          FMD_Deinit

; 750  :     
; 751  :     // Initialize boot partition library
; 752  :     if (!BP_Init((LPBYTE)g_ulBPartBase, g_ulBPartLengthBytes, NULL, &regInfo, NULL))

  00080	e594100c	 ldr         r1, [r4, #0xC]
  00084	e5940008	 ldr         r0, [r4, #8]
  00088	e3a08000	 mov         r8, #0
  0008c	e28d3014	 add         r3, sp, #0x14
  00090	e3a02000	 mov         r2, #0
  00094	e58d8000	 str         r8, [sp]
  00098	eb000000	 bl          BP_Init
  0009c	e3500000	 cmp         r0, #0
  000a0	1a000002	 bne         |$LN8@BLConfigur|

; 753  :     {
; 754  :         OALLog(L"BLConfigureFlashPartitions: Error initializing bootpart library!!\r\n");

  000a4	e59f015c	 ldr         r0, [pc, #0x15C]
  000a8	eb000000	 bl          NKDbgPrintfW

; 755  :         goto cleanUp;

  000ac	ea000048	 b           |$cleanUp$48027|
  000b0		 |$LN8@BLConfigur|

; 756  :     }
; 757  :     
; 758  :     // Get boot partition size
; 759  :     // Ensure boot partition uses entire blocks with no space left over
; 760  :     // Round up to an even block size
; 761  :     dwBootPartitionSectorCount = ((g_bootCfg.osPartitionSize + (flashInfo.dwBytesPerBlock - 1))/ flashInfo.dwBytesPerBlock) * flashInfo.wSectorsPerBlock;
; 762  :     // Reduce by one to account for MBR, which will be the first sector in non reserved area.
; 763  :     // This causes boot partition to end on a block boundary
; 764  :     dwBootPartitionSectorCount -= 1;

  000b0	e59f314c	 ldr         r3, [pc, #0x14C]
  000b4	e59d200c	 ldr         r2, [sp, #0xC]
  000b8	e5933048	 ldr         r3, [r3, #0x48]
  000bc	e1a00002	 mov         r0, r2
  000c0	e0833002	 add         r3, r3, r2
  000c4	e2431001	 sub         r1, r3, #1
  000c8	eb000000	 bl          __rt_udiv
  000cc	e1dd31b0	 ldrh        r3, [sp, #0x10]

; 765  : 
; 766  :     // Check for existence and size of OS boot partition
; 767  :     hPartition = BP_OpenPartition((DWORD)NEXT_FREE_LOC, (DWORD)USE_REMAINING_SPACE, PART_BOOTSECTION, FALSE, PART_OPEN_EXISTING);

  000d0	e3a0e001	 mov         lr, #1
  000d4	e3e01000	 mvn         r1, #0
  000d8	e0020390	 mul         r2, r0, r3
  000dc	e3a03000	 mov         r3, #0
  000e0	e2426001	 sub         r6, r2, #1
  000e4	e3a02020	 mov         r2, #0x20
  000e8	e3e00000	 mvn         r0, #0
  000ec	e58de000	 str         lr, [sp]
  000f0	eb000000	 bl          BP_OpenPartition
  000f4	e1a04000	 mov         r4, r0

; 768  :     if (hPartition == INVALID_HANDLE_VALUE)

  000f8	e3740001	 cmn         r4, #1
  000fc	1a000002	 bne         |$LN7@BLConfigur|

; 769  :         OALLog(L"OS partition does not exist!!\r\n");

  00100	e59f00f8	 ldr         r0, [pc, #0xF8]
  00104	eb000000	 bl          NKDbgPrintfW

; 770  :     else

  00108	ea000012	 b           |$LN3@BLConfigur|
  0010c		 |$LN7@BLConfigur|

; 771  :     {
; 772  :         pPartitionEntry = BP_GetPartitionInfo(hPartition);

  0010c	e1a00004	 mov         r0, r4
  00110	eb000000	 bl          BP_GetPartitionInfo

; 773  :         if (dwBootPartitionSectorCount != pPartitionEntry->Part_TotalSectors)

  00114	e5d0e00c	 ldrb        lr, [r0, #0xC]
  00118	e5d0300d	 ldrb        r3, [r0, #0xD]
  0011c	e5d0200e	 ldrb        r2, [r0, #0xE]
  00120	e5d0100f	 ldrb        r1, [r0, #0xF]
  00124	e18e3403	 orr         r3, lr, r3, lsl #8
  00128	e1833802	 orr         r3, r3, r2, lsl #16
  0012c	e1832c01	 orr         r2, r3, r1, lsl #24
  00130	e1560002	 cmp         r6, r2
  00134	0a000003	 beq         |$LN5@BLConfigur|

; 774  :         {
; 775  :             OALLog(L"OS partition does not match configured size!!  Sector count expected: 0x%x, actual 0x%x\r\n", dwBootPartitionSectorCount, pPartitionEntry->Part_TotalSectors);

  00138	e59f00bc	 ldr         r0, [pc, #0xBC]
  0013c	e1a01006	 mov         r1, r6
  00140	eb000000	 bl          NKDbgPrintfW

; 776  :             // Mark handle invalid to kick us into formatting code
; 777  :             hPartition = INVALID_HANDLE_VALUE;

  00144	e3e04000	 mvn         r4, #0
  00148		 |$LN5@BLConfigur|

; 778  :         }
; 779  :     }
; 780  :         
; 781  :     if ((hPartition == INVALID_HANDLE_VALUE) || (bForceEnable == TRUE))

  00148	e3740001	 cmn         r4, #1
  0014c	0a000001	 beq         |$LN3@BLConfigur|
  00150	e3570001	 cmp         r7, #1
  00154	1a00001d	 bne         |$LN4@BLConfigur|
  00158		 |$LN3@BLConfigur|

; 782  :     {
; 783  :         // OS binary partition either does not exist or does not match configured size
; 784  :         OALLog(L"Formatting flash...\r\n");

  00158	e59f0098	 ldr         r0, [pc, #0x98]
  0015c	eb000000	 bl          NKDbgPrintfW

; 785  :         // Create a new partion
; 786  :         // Can't just call BP_OpenPartition with PART_OPEN_ALWAYS because it will erase reserved 
; 787  :         // blocks (bootloader) if MBR doesn't exist.  Also, we want to ensure the boot partition
; 788  :         // is actually the first partition on the flash.  So do low level format here (note that 
; 789  :         // this destroys all other partitions on the device)
; 790  :         // Note, we're skipping the block check for speed reasons. Might not want this in a production device...
; 791  :         BP_LowLevelFormat (0, flashInfo.dwNumBlocks, FORMAT_SKIP_RESERVED|FORMAT_SKIP_BLOCK_CHECK);

  00160	e59d1008	 ldr         r1, [sp, #8]
  00164	e3a02003	 mov         r2, #3
  00168	e3a00000	 mov         r0, #0
  0016c	eb000000	 bl          BP_LowLevelFormat

; 792  :         // Create the OS partition
; 793  :         hPartition = BP_OpenPartition((DWORD)NEXT_FREE_LOC, dwBootPartitionSectorCount, PART_BOOTSECTION, FALSE, PART_CREATE_NEW);

  00170	e3a03000	 mov         r3, #0
  00174	e3a02020	 mov         r2, #0x20
  00178	e1a01006	 mov         r1, r6
  0017c	e3e00000	 mvn         r0, #0
  00180	e58d8000	 str         r8, [sp]
  00184	eb000000	 bl          BP_OpenPartition

; 794  :         if (hPartition == INVALID_HANDLE_VALUE)

  00188	e3700001	 cmn         r0, #1
  0018c	1a000002	 bne         |$LN2@BLConfigur|

; 795  :         {
; 796  :             OALLog(L"Error creating OS partition!!\r\n");

  00190	e59f005c	 ldr         r0, [pc, #0x5C]
  00194	eb000000	 bl          NKDbgPrintfW
  00198	ea00000d	 b           |$cleanUp$48027|
  0019c		 |$LN2@BLConfigur|

; 797  :             goto cleanUp;
; 798  :         }
; 799  :         // Create FAT partition on remaining flash (can be automatically mounted)
; 800  :         hPartition = BP_OpenPartition((DWORD)NEXT_FREE_LOC, (DWORD)USE_REMAINING_SPACE, PART_DOS32, FALSE, PART_CREATE_NEW);

  0019c	e3a03000	 mov         r3, #0
  001a0	e3a0200b	 mov         r2, #0xB
  001a4	e3e01000	 mvn         r1, #0
  001a8	e3e00000	 mvn         r0, #0
  001ac	e58d8000	 str         r8, [sp]
  001b0	eb000000	 bl          BP_OpenPartition

; 801  :         if (hPartition == INVALID_HANDLE_VALUE)

  001b4	e3700001	 cmn         r0, #1
  001b8	1a000002	 bne         |$LN1@BLConfigur|

; 802  :         {
; 803  :             OALLog(L"Error creating file partition!!\r\n");

  001bc	e59f002c	 ldr         r0, [pc, #0x2C]
  001c0	eb000000	 bl          NKDbgPrintfW
  001c4	ea000002	 b           |$cleanUp$48027|
  001c8		 |$LN1@BLConfigur|

; 804  :             goto cleanUp;
; 805  :         }
; 806  :         OALLog(L"Flash format complete!\r\n");

  001c8	e59f001c	 ldr         r0, [pc, #0x1C]
  001cc	eb000000	 bl          NKDbgPrintfW
  001d0		 |$LN4@BLConfigur|

; 807  :     }
; 808  :     
; 809  :     // Done
; 810  :     rc = TRUE;

  001d0	e3a05001	 mov         r5, #1
  001d4		 |$cleanUp$48027|

; 811  : 
; 812  : cleanUp:
; 813  :     return rc;

  001d4	e59d0394	 ldr         r0, [sp, #0x394]
  001d8	eb000000	 bl          __security_check_cookie

; 814  : }

  001dc	e1a00005	 mov         r0, r5
  001e0	e28ddfe6	 add         sp, sp, #0xE6, 30
  001e4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001e8	e12fff1e	 bx          lr
  001ec		 |$LN17@BLConfigur|
  001ec		 |$LN18@BLConfigur|
  001ec	00000000	 DCD         |??_C@_1DC@CJMIMBMC@?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  001f0		 |$LN19@BLConfigur|
  001f0	00000000	 DCD         |??_C@_1EE@EELLBIAJ@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN@|
  001f4		 |$LN20@BLConfigur|
  001f4	00000000	 DCD         |??_C@_1EA@FBHNJDFD@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  001f8		 |$LN21@BLConfigur|
  001f8	00000000	 DCD         |??_C@_1CM@NDGHMEGF@?$AAF?$AAo?$AAr?$AAm?$AAa?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  001fc		 |$LN22@BLConfigur|
  001fc	00000000	 DCD         |??_C@_1LE@KHIPBHLF@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AAc?$AAo?$AAn?$AAf@|
  00200		 |$LN23@BLConfigur|
  00200	00000000	 DCD         |??_C@_1EA@PANFDMBA@?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AA?$CB?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00204		 |$LN24@BLConfigur|
  00204	00000000	 DCD         |g_bootCfg|
  00208		 |$LN25@BLConfigur|
  00208	00000000	 DCD         |??_C@_1II@PGPDCKHA@?$AAB?$AAL?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAP?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo@|
  0020c		 |$LN26@BLConfigur|
  0020c	00000000	 DCD         |g_ulFlashBase|
  00210		 |$LN27@BLConfigur|
  00210	00000000	 DCD         |__security_cookie|
  00214		 |$M48358|

			 ENDP  ; |BLConfigureFlashPartitions|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1CE@KBCKFLJM@?$AAN?$AAK?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@HODAKHKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAh?$AAa?$AAv?$AAe?$AA?5?$AAR?$AAO?$AAM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FFBJDIJA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAP?$AA_?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@FNGCHJDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@JACEGLCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KEKCJKLC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$CB?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@CPEKEJEK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@NJKPEMPA@?$AA?$AN?$AA?6?$AAL?$AAo?$AAa?$AAd?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@| [ DATA ] ; `string'
	IMPORT	|g_eboot|
	IMPORT	|OALVAtoPA|
	IMPORT	|BP_ReadData|
	IMPORT	|BP_SetDataPointer|

  00000			 AREA	 |.pdata|, PDATA
|$T48408| DCD	|$LN30@ReadFlashN|
	DCD	0xc0009502

  00000			 AREA	 |.xdata|, DATA
|$T48404| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@KBCKFLJM@?$AAN?$AAK?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "K", 0x0, " ", 0x0, "I", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "L", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@HODAKHKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAh?$AAa?$AAv?$AAe?$AA?5?$AAR?$AAO?$AAM@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "N", 0x0, "K", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "O"
	DCB	0x0, "M", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FFBJDIJA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAP?$AA_?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@FNGCHJDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@JACEGLCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "O", 0x0, "S", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KEKCJKLC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$CB?$AA?$AN?$AA?6@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "S", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "d", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@CPEKEJEK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "F", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "h", 0x0, "N", 0x0, "K", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "l", 0x0, "i"
	DCB	0x0, "b", 0x0, "r", 0x0, "a", 0x0, "r", 0x0, "y", 0x0, "!"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NJKPEMPA@?$AA?$AN?$AA?6?$AAL?$AAo?$AAa?$AAd?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "L", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "N", 0x0, "K", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o"
	DCB	0x0, "m", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T48404|

  00008		 |ReadFlashNK| PROC

; 138  : {

  00008		 |$LN30@ReadFlashN|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24ddfe3	 sub         sp, sp, #0xE3, 30
  00010		 |$M48405|
  00010	e59f3240	 ldr         r3, [pc, #0x240]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3388	 str         r3, [sp, #0x388]

; 139  :     UINT32 rc = (UINT32) BL_ERROR;
; 140  :     HANDLE hPartition;
; 141  :     ROMHDR *pTOC;
; 142  :     ULONG offset, size;
; 143  :     UCHAR *pData;
; 144  :     DWORD *pInfo;
; 145  :     PCI_REG_INFO regInfo;
; 146  : 
; 147  :     memset(&regInfo, 0, sizeof(PCI_REG_INFO));

  0001c	e3a02d0e	 mov         r2, #0xE, 26
  00020	e3a01000	 mov         r1, #0
  00024	e28d0008	 add         r0, sp, #8
  00028	e3e05000	 mvn         r5, #0
  0002c	eb000000	 bl          memset

; 148  :     regInfo.MemBase.Num    = 1;
; 149  :     regInfo.MemLen.Num     = 1;
; 150  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;
; 151  :     regInfo.MemLen.Reg[0]  = g_ulFlashLengthBytes;
; 152  : 
; 153  : 
; 154  :     // Check if there is a valid image
; 155  :     OALMSG(OAL_INFO, (L"\r\nLoad NK image from flash memory\r\n"));

  00030	e59f421c	 ldr         r4, [pc, #0x21C]
  00034	e59f6214	 ldr         r6, [pc, #0x214]
  00038	e3a00001	 mov         r0, #1
  0003c	e5941440	 ldr         r1, [r4, #0x440]
  00040	e5963000	 ldr         r3, [r6]
  00044	e5962004	 ldr         r2, [r6, #4]
  00048	e3110008	 tst         r1, #8
  0004c	e58d0330	 str         r0, [sp, #0x330]
  00050	159f01f4	 ldrne       r0, [pc, #0x1F4]
  00054	e3a0e001	 mov         lr, #1
  00058	e58d3318	 str         r3, [sp, #0x318]
  0005c	e58d2334	 str         r2, [sp, #0x334]
  00060	e58de314	 str         lr, [sp, #0x314]
  00064	1b000000	 blne        NKDbgPrintfW

; 156  : 
; 157  :     // Initialize boot partition library
; 158  :     if (!BP_Init((LPBYTE)g_ulBPartBase, g_ulBPartLengthBytes, NULL, &regInfo, NULL))

  00068	e596100c	 ldr         r1, [r6, #0xC]
  0006c	e5960008	 ldr         r0, [r6, #8]
  00070	e3a0e000	 mov         lr, #0
  00074	e28d3008	 add         r3, sp, #8
  00078	e3a02000	 mov         r2, #0
  0007c	e58de000	 str         lr, [sp]
  00080	eb000000	 bl          BP_Init
  00084	e3500000	 cmp         r0, #0
  00088	1a000002	 bne         |$LN7@ReadFlashN|

; 159  :     {
; 160  :         OALLog(L"ReadFlashNK: Error initializing bootpart library!!\r\n");

  0008c	e59f01b4	 ldr         r0, [pc, #0x1B4]
  00090	eb000000	 bl          NKDbgPrintfW

; 161  :         goto cleanUp;

  00094	ea00005d	 b           |$cleanUp$47750|
  00098		 |$LN7@ReadFlashN|

; 162  :     }
; 163  :     
; 164  :     // Open OS boot partition
; 165  :     hPartition = BP_OpenPartition((DWORD)NEXT_FREE_LOC, (DWORD)USE_REMAINING_SPACE, PART_BOOTSECTION, FALSE, PART_OPEN_EXISTING);

  00098	e3a03001	 mov         r3, #1
  0009c	e58d3000	 str         r3, [sp]
  000a0	e3a03000	 mov         r3, #0
  000a4	e3a02020	 mov         r2, #0x20
  000a8	e1a01005	 mov         r1, r5
  000ac	e1a00005	 mov         r0, r5
  000b0	eb000000	 bl          BP_OpenPartition
  000b4	e1a06000	 mov         r6, r0

; 166  :     if (hPartition == INVALID_HANDLE_VALUE)

  000b8	e3760001	 cmn         r6, #1
  000bc	1a000005	 bne         |$LN6@ReadFlashN|

; 167  :     {
; 168  :         OALMSG(OAL_ERROR, (L"ERROR: OS partition not found!\r\n"));

  000c0	e5943440	 ldr         r3, [r4, #0x440]
  000c4	e3130001	 tst         r3, #1
  000c8	0a000050	 beq         |$cleanUp$47750|
  000cc	e59f0170	 ldr         r0, [pc, #0x170]
  000d0	eb000000	 bl          NKDbgPrintfW
  000d4	ea00004d	 b           |$cleanUp$47750|
  000d8		 |$LN6@ReadFlashN|

; 169  :         goto cleanUp;
; 170  :     }
; 171  :     
; 172  :     BP_SetDataPointer(hPartition, 0);

  000d8	e3a01000	 mov         r1, #0
  000dc	e1a00006	 mov         r0, r6
  000e0	eb000000	 bl          BP_SetDataPointer

; 173  :     
; 174  :     // Set address where to place image
; 175  :     pData = (UCHAR*)IMAGE_WINCE_CODE_CA;
; 176  : 
; 177  : 
; 178  :     // First read 4kB with pointer to TOC
; 179  :     offset = 0;
; 180  :     size = 4096;
; 181  :     if (!BP_ReadData(hPartition, pData + offset, size))

  000e4	e3a08102	 mov         r8, #2, 2
  000e8	e3881a02	 orr         r1, r8, #2, 20
  000ec	e3a02a01	 mov         r2, #1, 20
  000f0	e1a00006	 mov         r0, r6
  000f4	eb000000	 bl          BP_ReadData
  000f8	e3500000	 cmp         r0, #0
  000fc	1a000005	 bne         |$LN5@ReadFlashN|

; 182  :     {
; 183  :         OALMSG(OAL_ERROR, (L"ERROR: Error reading OS partition!\r\n"));

  00100	e5943440	 ldr         r3, [r4, #0x440]
  00104	e3130001	 tst         r3, #1
  00108	0a000040	 beq         |$cleanUp$47750|
  0010c	e59f012c	 ldr         r0, [pc, #0x12C]
  00110	eb000000	 bl          NKDbgPrintfW
  00114	ea00003d	 b           |$cleanUp$47750|
  00118		 |$LN5@ReadFlashN|

; 184  :         goto cleanUp;

  00118	e3a03102	 mov         r3, #2, 2

; 185  :     }
; 186  : 
; 187  :     // Verify that we get CE image
; 188  :     pInfo = (DWORD*)(pData + ROM_SIGNATURE_OFFSET);

  0011c	e3831d81	 orr         r1, r3, #0x81, 26

; 189  :     if (*pInfo != ROM_SIGNATURE)

  00120	e5912000	 ldr         r2, [r1]
  00124	e59f3110	 ldr         r3, [pc, #0x110]
  00128	e1520003	 cmp         r2, r3
  0012c	0a000005	 beq         |$LN4@ReadFlashN|

; 190  :         {
; 191  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 192  :             L"Image signature not found\r\n"
; 193  :             ));

  00130	e5943440	 ldr         r3, [r4, #0x440]
  00134	e3130001	 tst         r3, #1
  00138	0a000034	 beq         |$cleanUp$47750|
  0013c	e59f00f4	 ldr         r0, [pc, #0xF4]
  00140	eb000000	 bl          NKDbgPrintfW
  00144	ea000031	 b           |$cleanUp$47750|
  00148		 |$LN4@ReadFlashN|

; 194  :         goto cleanUp;
; 195  :         }
; 196  : 
; 197  :     // Read image up through actual TOC
; 198  :     offset = size;
; 199  :     size = pInfo[2] - size + sizeof(ROMHDR);

  00148	e5912008	 ldr         r2, [r1, #8]
  0014c	e3a03c0f	 mov         r3, #0xF, 24
  00150	e38330ac	 orr         r3, r3, #0xAC
  00154	e0427003	 sub         r7, r2, r3
  00158	e3a03102	 mov         r3, #2, 2

; 200  :     if (!BP_ReadData(hPartition, pData + offset, size))

  0015c	e3831a03	 orr         r1, r3, #3, 20
  00160	e1a02007	 mov         r2, r7
  00164	e1a00006	 mov         r0, r6
  00168	eb000000	 bl          BP_ReadData
  0016c	e3500000	 cmp         r0, #0
  00170	1a000005	 bne         |$LN3@ReadFlashN|

; 201  :     {
; 202  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 203  :             L"BP_ReadData call failed!\r\n"
; 204  :             ));

  00174	e5943440	 ldr         r3, [r4, #0x440]
  00178		 |$LN27@ReadFlashN|
  00178	e3130001	 tst         r3, #1
  0017c	0a000023	 beq         |$cleanUp$47750|
  00180	e59f00ac	 ldr         r0, [pc, #0xAC]
  00184	eb000000	 bl          NKDbgPrintfW
  00188	ea000020	 b           |$cleanUp$47750|
  0018c		 |$LN3@ReadFlashN|

; 205  :         goto cleanUp;
; 206  :      }
; 207  : 
; 208  :     // Verify image
; 209  :     if (!VerifyImage(pData, &pTOC))

  0018c	e28d1004	 add         r1, sp, #4
  00190	e3880a02	 orr         r0, r8, #2, 20
  00194	eb000000	 bl          VerifyImage
  00198	e3500000	 cmp         r0, #0
  0019c	1a000005	 bne         |$LN2@ReadFlashN|

; 210  :         {
; 211  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 212  :             L"NK image doesn't have ROM signature\r\n"
; 213  :             ));

  001a0	e5943440	 ldr         r3, [r4, #0x440]
  001a4	e3130001	 tst         r3, #1
  001a8	0a000018	 beq         |$cleanUp$47750|
  001ac	e59f007c	 ldr         r0, [pc, #0x7C]
  001b0	eb000000	 bl          NKDbgPrintfW
  001b4	ea000015	 b           |$cleanUp$47750|
  001b8		 |$LN2@ReadFlashN|

; 214  :         goto cleanUp;
; 215  :         }
; 216  : 
; 217  :     // Read remainder of image
; 218  :     offset += size;
; 219  :     size = pTOC->physlast - pTOC->physfirst - offset;

  001b8	e59d3004	 ldr         r3, [sp, #4]
  001bc	e287ea01	 add         lr, r7, #1, 20
  001c0	e3e011fe	 mvn         r1, #0xFE, 2
  001c4	e593200c	 ldr         r2, [r3, #0xC]
  001c8	e5930008	 ldr         r0, [r3, #8]

; 220  :     if (!BP_ReadData(hPartition, pData + offset, size))

  001cc	e2211d7f	 eor         r1, r1, #0x7F, 26
  001d0	e042300e	 sub         r3, r2, lr
  001d4	e0432000	 sub         r2, r3, r0
  001d8	e1a00006	 mov         r0, r6
  001dc	e04e1001	 sub         r1, lr, r1
  001e0	eb000000	 bl          BP_ReadData

; 221  :     {
; 222  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 223  :             L"BP_ReadData call failed!\r\n"
; 224  :             ));

  001e4	e5943440	 ldr         r3, [r4, #0x440]
  001e8	e3500000	 cmp         r0, #0

; 225  :         goto cleanUp;

  001ec	0affffe1	 beq         |$LN27@ReadFlashN|

; 226  :     }
; 227  : 
; 228  :     OALMSG(OAL_INFO, (L"NK Image Loaded\r\n"));

  001f0	e3130008	 tst         r3, #8
  001f4	159f0030	 ldrne       r0, [pc, #0x30]
  001f8	1b000000	 blne        NKDbgPrintfW

; 229  : 
; 230  :     // Done
; 231  :     g_eboot.launchAddress = OALVAtoPA((UCHAR*)IMAGE_WINCE_CODE_CA);

  001fc	e3880a02	 orr         r0, r8, #2, 20
  00200	eb000000	 bl          OALVAtoPA
  00204	e59f301c	 ldr         r3, [pc, #0x1C]

; 232  :     rc = BL_JUMP;

  00208	e3a05001	 mov         r5, #1
  0020c	e583000c	 str         r0, [r3, #0xC]
  00210		 |$cleanUp$47750|

; 233  : 
; 234  : cleanUp:
; 235  :     return rc;

  00210	e59d0388	 ldr         r0, [sp, #0x388]
  00214	eb000000	 bl          __security_check_cookie

; 236  : }

  00218	e1a00005	 mov         r0, r5
  0021c	e28ddfe3	 add         sp, sp, #0xE3, 30
  00220	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00224	e12fff1e	 bx          lr
  00228		 |$LN31@ReadFlashN|
  00228		 |$LN32@ReadFlashN|
  00228	00000000	 DCD         |g_eboot|
  0022c		 |$LN33@ReadFlashN|
  0022c	00000000	 DCD         |??_C@_1CE@KBCKFLJM@?$AAN?$AAK?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAL?$AAo?$AAa?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00230		 |$LN34@ReadFlashN|
  00230	00000000	 DCD         |??_C@_1FK@HODAKHKA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAh?$AAa?$AAv?$AAe?$AA?5?$AAR?$AAO?$AAM@|
  00234		 |$LN35@ReadFlashN|
  00234	00000000	 DCD         |??_C@_1EE@FFBJDIJA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAP?$AA_?$AAR?$AAe?$AAa?$AAd?$AAD?$AAa?$AAt?$AAa?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@|
  00238		 |$LN36@ReadFlashN|
  00238	00000000	 DCD         |??_C@_1EG@FNGCHJDC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd@|
  0023c		 |$LN37@ReadFlashN|
  0023c	43454345	 DCD         0x43454345
  00240		 |$LN38@ReadFlashN|
  00240	00000000	 DCD         |??_C@_1EK@JACEGLCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo@|
  00244		 |$LN39@ReadFlashN|
  00244	00000000	 DCD         |??_C@_1EC@KEKCJKLC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$CB?$AA?$AN?$AA?6@|
  00248		 |$LN40@ReadFlashN|
  00248	00000000	 DCD         |??_C@_1GK@CPEKEJEK@?$AAR?$AAe?$AAa?$AAd?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5@|
  0024c		 |$LN41@ReadFlashN|
  0024c	00000000	 DCD         |??_C@_1EI@NJKPEMPA@?$AA?$AN?$AA?6?$AAL?$AAo?$AAa?$AAd?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr@|
  00250		 |$LN42@ReadFlashN|
  00250	00000000	 DCD         |g_ulFlashBase|
  00254		 |$LN43@ReadFlashN|
  00254	00000000	 DCD         |dpCurSettings|
  00258		 |$LN44@ReadFlashN|
  00258	00000000	 DCD         |__security_cookie|
  0025c		 |$M48406|

			 ENDP  ; |ReadFlashNK|

	EXPORT	|??_C@_1JC@FCHNHAAL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@NJEDFGLK@?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KM@GAMGNNOD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JG@PEMOLGHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@LKIJELAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@MFAPGNDN@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe@| [ DATA ] ; `string'
	IMPORT	|memmove|

  00000			 AREA	 |.pdata|, PDATA
|$T48462| DCD	|$LN37@WriteFlash@2|
	DCD	0x40007a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@FCHNHAAL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "X", 0x0, "L", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "m", 0x0, "u", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d"
	DCB	0x0, "u", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " ", 0x0, "f"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@NJEDFGLK@?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "X"
	DCB	0x0, "L", 0x0, "D", 0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KM@GAMGNNOD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "X", 0x0, "L", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s"
	DCB	0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "b"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@PEMOLGHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "X", 0x0, "L", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s"
	DCB	0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@LKIJELAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "X", 0x0, "L", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@MFAPGNDN@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "X", 0x0, "L", 0x0, "D"
	DCB	0x0, "R", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WriteFlashXLDR| PROC

; 340  : {

  00000		 |$LN37@WriteFlash@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M48459|
  00008	e1a09001	 mov         r9, r1
  0000c	e1a05000	 mov         r5, r0

; 341  :     BOOL rc = FALSE;
; 342  :     HANDLE hFlash = NULL;
; 343  :     ROMHDR *pTOC;
; 344  :     UINT32 offset, xldrSize, blocknum, blocksize;
; 345  :     UINT8 *pData;
; 346  : 
; 347  : 	UNREFERENCED_PARAMETER(size);
; 348  : 
; 349  :     OALMSG(OAL_INFO, (L"\r\nWriting XLDR image to flash memory\r\n"));

  00010	e59f41cc	 ldr         r4, [pc, #0x1CC]
  00014	e3a06000	 mov         r6, #0
  00018	e5943440	 ldr         r3, [r4, #0x440]
  0001c	e3130008	 tst         r3, #8
  00020	159f01b8	 ldrne       r0, [pc, #0x1B8]
  00024	1b000000	 blne        NKDbgPrintfW

; 350  : 
; 351  :     // Open flash storage
; 352  :     hFlash = OALFlashStoreOpen(g_ulFlashBase);

  00028	e59f31ac	 ldr         r3, [pc, #0x1AC]
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          OALFlashStoreOpen
  00034	e1b08000	 movs        r8, r0

; 353  :     if (hFlash == NULL)

  00038	1a000005	 bne         |$LN11@WriteFlash@2|

; 354  :         {
; 355  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 356  :             L"OALFlashStoreOpen call failed!\r\n"
; 357  :             ));

  0003c	e5943440	 ldr         r3, [r4, #0x440]
  00040	e3130001	 tst         r3, #1
  00044	0a000059	 beq         |$LN1@WriteFlash@2|
  00048	e59f0188	 ldr         r0, [pc, #0x188]
  0004c	eb000000	 bl          NKDbgPrintfW

; 358  :         goto cleanUp;

  00050	ea000056	 b           |$LN1@WriteFlash@2|
  00054		 |$LN11@WriteFlash@2|

; 359  :         }
; 360  : 
; 361  :     // Get data location
; 362  :     pData = OEMMapMemAddr(address, address);

  00054	e1a01005	 mov         r1, r5
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          OEMMapMemAddr

; 363  : 
; 364  :     // Verify image
; 365  :     if (!VerifyImage(pData, &pTOC))

  00060	e28d1008	 add         r1, sp, #8
  00064	e1a0b000	 mov         r11, r0
  00068	eb000000	 bl          VerifyImage

; 366  :         {
; 367  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 368  :             L"XLDR image signature not found\r\n"
; 369  :             ));

  0006c	e5942440	 ldr         r2, [r4, #0x440]
  00070	e3500000	 cmp         r0, #0
  00074	1a000004	 bne         |$LN18@WriteFlash@2|
  00078	e3120001	 tst         r2, #1
  0007c	0a000002	 beq         |$LN18@WriteFlash@2|
  00080	e59f014c	 ldr         r0, [pc, #0x14C]
  00084	eb000000	 bl          NKDbgPrintfW
  00088	e5942440	 ldr         r2, [r4, #0x440]
  0008c		 |$LN18@WriteFlash@2|

; 370  :         }
; 371  : 
; 372  :     // Verify that this is XLDR image
; 373  :     if (pTOC->numfiles > 0 || pTOC->nummods > 1)

  0008c	e59d0008	 ldr         r0, [sp, #8]
  00090	e5903030	 ldr         r3, [r0, #0x30]
  00094	e3530000	 cmp         r3, #0
  00098	8a00003f	 bhi         |$LN8@WriteFlash@2|
  0009c	e5903010	 ldr         r3, [r0, #0x10]
  000a0	e3530001	 cmp         r3, #1
  000a4	8a00003c	 bhi         |$LN8@WriteFlash@2|

; 378  :         goto cleanUp;
; 379  :         }
; 380  : 
; 381  :     // Check for maximal XLRD size
; 382  :     xldrSize = pTOC->physlast - pTOC->physfirst;

  000a8	e590100c	 ldr         r1, [r0, #0xC]
  000ac	e5903008	 ldr         r3, [r0, #8]

; 383  :     if (xldrSize > (IMAGE_XLDR_CODE_SIZE - 2*sizeof(DWORD)) )

  000b0	e3a00cbf	 mov         r0, #0xBF, 24
  000b4	e38070f8	 orr         r7, r0, #0xF8
  000b8	e041a003	 sub         r10, r1, r3
  000bc	e15a0007	 cmp         r10, r7
  000c0	9a000006	 bls         |$LN7@WriteFlash@2|

; 384  :         {
; 385  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 386  :             L"XLDR image size 0x%04x doesn't fit to limit 0x%04x\r\n", size, IMAGE_XLDR_CODE_SIZE - 2*sizeof(DWORD)
; 387  :             ));

  000c4	e3120001	 tst         r2, #1
  000c8	0a000036	 beq         |$cleanUp$47825|
  000cc	e59f00fc	 ldr         r0, [pc, #0xFC]
  000d0	e1a02007	 mov         r2, r7
  000d4	e1a01009	 mov         r1, r9
  000d8	eb000000	 bl          NKDbgPrintfW

; 388  :         goto cleanUp;

  000dc	ea000031	 b           |$cleanUp$47825|
  000e0		 |$LN7@WriteFlash@2|

; 389  :         }
; 390  :         
; 391  :     blocksize = OALFlashStoreBlockSize(hFlash);

  000e0	e1a00008	 mov         r0, r8
  000e4	eb000000	 bl          OALFlashStoreBlockSize
  000e8	e1a05000	 mov         r5, r0

; 392  :     
; 393  :     if (blocksize < IMAGE_XLDR_CODE_SIZE)

  000ec	e3550903	 cmp         r5, #3, 18
  000f0	2a000007	 bcs         |$LN6@WriteFlash@2|

; 394  :         {
; 395  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 396  :             L"XLDR image size 0x%04x doesn't fit to flash block size 0x%04x\r\n", IMAGE_XLDR_CODE_SIZE, blocksize
; 397  :             ));

  000f4	e5943440	 ldr         r3, [r4, #0x440]
  000f8	e3130001	 tst         r3, #1
  000fc	0a000029	 beq         |$cleanUp$47825|
  00100	e59f00c4	 ldr         r0, [pc, #0xC4]
  00104	e1a02005	 mov         r2, r5
  00108	e3a01903	 mov         r1, #3, 18
  0010c	eb000000	 bl          NKDbgPrintfW
  00110	ea000024	 b           |$cleanUp$47825|
  00114		 |$LN6@WriteFlash@2|

; 398  :         goto cleanUp;
; 399  :         }
; 400  : 
; 401  :     // First we have to offset image by 2 DWORDS to insert BootROM header 
; 402  :     memmove(pData + 2*sizeof(DWORD), pData, xldrSize);

  00114	e1a0200a	 mov         r2, r10
  00118	e1a0100b	 mov         r1, r11
  0011c	e28b0008	 add         r0, r11, #8
  00120	eb000000	 bl          memmove
  00124	e3a03101	 mov         r3, #1, 2

; 403  :     
; 404  :     // Insert BootROM header
; 405  :     ((DWORD*)pData)[0] = IMAGE_XLDR_CODE_SIZE - 2*sizeof(DWORD);    // Max size of image
; 406  :     ((DWORD*)pData)[1] = IMAGE_XLDR_CODE_PA;                        // Load address

  00128	e3833602	 orr         r3, r3, #2, 12
  0012c	e58b7000	 str         r7, [r11]
  00130	e58b3004	 str         r3, [r11, #4]

; 407  : 
; 408  :     // Now copy into first four blocks per boot ROM requirement.
; 409  :     // Internal boot ROM expects the loader to be duplicated in the first 4 blocks for
; 410  :     // data redundancy. Note that block size of memory used on this platform is larger 
; 411  :     // than xldr size so there will be a gap in each block.
; 412  :     offset = 0;

  00134	e3a06000	 mov         r6, #0
  00138	e3a07004	 mov         r7, #4
  0013c	e3a09000	 mov         r9, #0
  00140		 |$LL5@WriteFlash@2|

; 413  :     for (blocknum = 0; blocknum < 4; blocknum++)
; 414  :         {
; 415  :         if (!OALFlashStoreWrite(
; 416  :                 hFlash, offset, pData, IMAGE_XLDR_CODE_SIZE, FALSE, FALSE
; 417  :                 ))

  00140	e3a03903	 mov         r3, #3, 18
  00144	e1a0200b	 mov         r2, r11
  00148	e1a01006	 mov         r1, r6
  0014c	e1a00008	 mov         r0, r8
  00150	e58d9004	 str         r9, [sp, #4]
  00154	e58d9000	 str         r9, [sp]
  00158	eb000000	 bl          OALFlashStoreWrite
  0015c	e3500000	 cmp         r0, #0
  00160	1a000004	 bne         |$LN33@WriteFlash@2|

; 418  :             {
; 419  :             OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 420  :                 L"OALFlashStoreWrite at relative address 0x%08x failed\r\n",
; 421  :                 offset
; 422  :                 ));

  00164	e5943440	 ldr         r3, [r4, #0x440]
  00168	e3130001	 tst         r3, #1
  0016c	159f0054	 ldrne       r0, [pc, #0x54]
  00170	11a01006	 movne       r1, r6
  00174	1b000000	 blne        NKDbgPrintfW
  00178		 |$LN33@WriteFlash@2|

; 423  :             }
; 424  :         offset += blocksize;

  00178	e0866005	 add         r6, r6, r5
  0017c	e2577001	 subs        r7, r7, #1
  00180	1affffee	 bne         |$LL5@WriteFlash@2|
  00184	e5943440	 ldr         r3, [r4, #0x440]

; 425  :         }
; 426  : 
; 427  :     OALMSG(OAL_INFO, (L"XLDR image written\r\n"));

  00188	e3130008	 tst         r3, #8
  0018c	159f0030	 ldrne       r0, [pc, #0x30]
  00190	1b000000	 blne        NKDbgPrintfW

; 428  : 
; 429  :     // Done
; 430  :     rc = TRUE;

  00194	e3a06001	 mov         r6, #1
  00198	ea000002	 b           |$cleanUp$47825|
  0019c		 |$LN8@WriteFlash@2|

; 374  :         {
; 375  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 376  :             L"XLDR image must have only one module and no file\r\n"
; 377  :             ));

  0019c	e3120001	 tst         r2, #1
  001a0	159f0018	 ldrne       r0, [pc, #0x18]
  001a4	1b000000	 blne        NKDbgPrintfW
  001a8		 |$cleanUp$47825|

; 431  : 
; 432  : cleanUp:
; 433  :     if (hFlash != NULL) OALFlashStoreClose(hFlash);

  001a8	e1a00008	 mov         r0, r8
  001ac	eb000000	 bl          OALFlashStoreClose
  001b0		 |$LN1@WriteFlash@2|

; 434  :     return rc;
; 435  : }

  001b0	e1a00006	 mov         r0, r6
  001b4	e28dd00c	 add         sp, sp, #0xC
  001b8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001bc	e12fff1e	 bx          lr
  001c0		 |$LN38@WriteFlash@2|
  001c0		 |$LN39@WriteFlash@2|
  001c0	00000000	 DCD         |??_C@_1JC@FCHNHAAL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@|
  001c4		 |$LN40@WriteFlash@2|
  001c4	00000000	 DCD         |??_C@_1CK@NJEDFGLK@?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  001c8		 |$LN41@WriteFlash@2|
  001c8	00000000	 DCD         |??_C@_1JK@INEHPIOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  001cc		 |$LN42@WriteFlash@2|
  001cc	00000000	 DCD         |??_C@_1KM@GAMGNNOD@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@|
  001d0		 |$LN43@WriteFlash@2|
  001d0	00000000	 DCD         |??_C@_1JG@PEMOLGHN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@|
  001d4		 |$LN44@WriteFlash@2|
  001d4	00000000	 DCD         |??_C@_1GO@LKIJELAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe@|
  001d8		 |$LN45@WriteFlash@2|
  001d8	00000000	 DCD         |??_C@_1GO@DLIAFJMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  001dc		 |$LN46@WriteFlash@2|
  001dc	00000000	 DCD         |g_ulFlashBase|
  001e0		 |$LN47@WriteFlash@2|
  001e0	00000000	 DCD         |??_C@_1EO@MFAPGNDN@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAX?$AAL?$AAD?$AAR?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm?$AAe@|
  001e4		 |$LN48@WriteFlash@2|
  001e4	00000000	 DCD         |dpCurSettings|
  001e8		 |$M48460|

			 ENDP  ; |WriteFlashXLDR|

	EXPORT	|??_C@_1CM@CMHKBBHI@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@OPDOICMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@HOPMBDBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@LGNLEKHJ@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T48510| DCD	|$LN28@WriteFlash@3|
	DCD	0x40005e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@CMHKBBHI@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, " ", 0x0, "i"
	DCB	0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@OPDOICMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "B", 0x0, "O"
	DCB	0x0, "O", 0x0, "T", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "g"
	DCB	0x0, "n", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@HOPMBDBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "E", 0x0, "B", 0x0, "O"
	DCB	0x0, "O", 0x0, "T", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, "o"
	DCB	0x0, " ", 0x0, "b", 0x0, "i", 0x0, "g", 0x0, " ", 0x0, "("
	DCB	0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "i", 0x0, "m"
	DCB	0x0, "u", 0x0, "m", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@LGNLEKHJ@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E", 0x0, "B", 0x0, "O"
	DCB	0x0, "O", 0x0, "T", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "h", 0x0, " "
	DCB	0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WriteFlashEBOOT| PROC

; 444  : {

  00000		 |$LN28@WriteFlash@3|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M48507|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a07000	 mov         r7, r0

; 445  :     BOOL rc = FALSE;
; 446  :     HANDLE hFlash = NULL;
; 447  :     UINT8 *pData;
; 448  :     UINT32 offset;
; 449  : 
; 450  : 
; 451  :     OALMSG(OAL_INFO, (L"\r\nWriting EBOOT image to flash memory\r\n"));

  00010	e59f415c	 ldr         r4, [pc, #0x15C]
  00014	e3a08000	 mov         r8, #0
  00018	e5943440	 ldr         r3, [r4, #0x440]
  0001c	e3130008	 tst         r3, #8
  00020	159f0148	 ldrne       r0, [pc, #0x148]
  00024	1b000000	 blne        NKDbgPrintfW

; 452  : 
; 453  :     // Open flash storage
; 454  :     hFlash = OALFlashStoreOpen(g_ulFlashBase);

  00028	e59f313c	 ldr         r3, [pc, #0x13C]
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          OALFlashStoreOpen
  00034	e1b06000	 movs        r6, r0

; 455  :     if (hFlash == NULL)

  00038	1a000005	 bne         |$LN6@WriteFlash@3|

; 456  :         {
; 457  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 458  :             L"OALFlashStoreOpen call failed!\r\n"
; 459  :             ));

  0003c	e5943440	 ldr         r3, [r4, #0x440]
  00040	e3130001	 tst         r3, #1
  00044	0a00003e	 beq         |$LN1@WriteFlash@3|
  00048	e59f0118	 ldr         r0, [pc, #0x118]
  0004c	eb000000	 bl          NKDbgPrintfW

; 460  :         goto cleanUp;

  00050	ea00003b	 b           |$LN1@WriteFlash@3|
  00054		 |$LN6@WriteFlash@3|

; 461  :         }
; 462  : 
; 463  :     // Check if image fit (last sector used for configuration)
; 464  :     if (size > (IMAGE_EBOOT_CODE_SIZE - OALFlashStoreSectorSize(hFlash)))

  00054	e1a00006	 mov         r0, r6
  00058	eb000000	 bl          OALFlashStoreSectorSize
  0005c	e2603701	 rsb         r3, r0, #1, 14
  00060	e1550003	 cmp         r5, r3
  00064	9a000009	 bls         |$LN13@WriteFlash@3|

; 465  :         {
; 466  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 467  :             L"EBOOT image too big (size 0x%08x, maximum size 0x%08x)\r\n",
; 468  :             size, IMAGE_EBOOT_CODE_SIZE - OALFlashStoreBlockSize(hFlash)
; 469  :             ));

  00068	e5943440	 ldr         r3, [r4, #0x440]
  0006c	e3130001	 tst         r3, #1
  00070	0a000006	 beq         |$LN13@WriteFlash@3|
  00074	e1a00006	 mov         r0, r6
  00078	eb000000	 bl          OALFlashStoreBlockSize
  0007c	e1a03000	 mov         r3, r0
  00080	e59f00dc	 ldr         r0, [pc, #0xDC]
  00084	e2632701	 rsb         r2, r3, #1, 14
  00088	e1a01005	 mov         r1, r5
  0008c	eb000000	 bl          NKDbgPrintfW
  00090		 |$LN13@WriteFlash@3|

; 470  :         //goto cleanUp;
; 471  :         }
; 472  : 
; 473  :     // Get data location
; 474  :     pData = OEMMapMemAddr(address, address);

  00090	e1a01007	 mov         r1, r7
  00094	e1a00007	 mov         r0, r7
  00098	eb000000	 bl          OEMMapMemAddr
  0009c	e1a07000	 mov         r7, r0

; 475  : 
; 476  :     // Verify that we get CE image
; 477  :     if (!VerifyImage(pData, NULL))

  000a0	e1a01007	 mov         r1, r7
  000a4	e5b12040	 ldr         r2, [r1, #0x40]!
  000a8	e59f30b0	 ldr         r3, [pc, #0xB0]
  000ac	e1520003	 cmp         r2, r3
  000b0	1a00001d	 bne         |$LN25@WriteFlash@3|
  000b4	e5913008	 ldr         r3, [r1, #8]
  000b8	e0830007	 add         r0, r3, r7
  000bc	eb000000	 bl          DumpTOC

; 482  :         goto cleanUp;
; 483  :         }
; 484  : 
; 485  :     // Fill unused space with 0xFF
; 486  :     if (size < IMAGE_EBOOT_CODE_SIZE)

  000c0	e3550701	 cmp         r5, #1, 14

; 487  :         {
; 488  :         memset(pData + size, 0xFF, IMAGE_EBOOT_CODE_SIZE - size);

  000c4	32652701	 rsbcc       r2, r5, #1, 14
  000c8	33a010ff	 movcc       r1, #0xFF
  000cc	30870005	 addcc       r0, r7, r5
  000d0		 |$cleanUp$48496|
  000d0	3b000000	 blcc        memset

; 489  :         }
; 490  : 
; 491  :     offset = IMAGE_XLDR_BOOTSEC_NAND_SIZE;
; 492  :     if (!OALFlashStoreWrite(
; 493  :             hFlash, offset, pData, IMAGE_EBOOT_CODE_SIZE, FALSE, FALSE
; 494  :             ))

  000d4	e3a0e000	 mov         lr, #0
  000d8	e3a03701	 mov         r3, #1, 14
  000dc	e1a02007	 mov         r2, r7
  000e0	e3a01702	 mov         r1, #2, 14
  000e4	e1a00006	 mov         r0, r6
  000e8	e58de004	 str         lr, [sp, #4]
  000ec	e58de000	 str         lr, [sp]
  000f0	eb000000	 bl          OALFlashStoreWrite

; 495  :         {
; 496  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 497  :             L"OALFlashStoreWrite at relative address 0x%08x failed\r\n", offset
; 498  :             ));

  000f4	e5943440	 ldr         r3, [r4, #0x440]
  000f8	e3500000	 cmp         r0, #0
  000fc	1a000005	 bne         |$LN2@WriteFlash@3|
  00100	e3130001	 tst         r3, #1
  00104	0a00000c	 beq         |$cleanUp$47870|
  00108	e59f004c	 ldr         r0, [pc, #0x4C]
  0010c	e3a01702	 mov         r1, #2, 14
  00110	eb000000	 bl          NKDbgPrintfW

; 499  :         goto cleanUp;

  00114	ea000008	 b           |$cleanUp$47870|
  00118		 |$LN2@WriteFlash@3|

; 500  :         }
; 501  : 
; 502  :     OALMSG(OAL_INFO, (L"EBOOT image written\r\n"));

  00118	e3130008	 tst         r3, #8
  0011c	159f0034	 ldrne       r0, [pc, #0x34]
  00120	1b000000	 blne        NKDbgPrintfW

; 503  : 
; 504  :     // Done
; 505  :     rc = TRUE;

  00124	e3a08001	 mov         r8, #1
  00128	ea000003	 b           |$cleanUp$47870|
  0012c		 |$LN25@WriteFlash@3|

; 478  :         {
; 479  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 480  :             L"EBOOT image signature not found\r\n"
; 481  :             ));

  0012c	e5943440	 ldr         r3, [r4, #0x440]
  00130	e3130001	 tst         r3, #1
  00134	159f0018	 ldrne       r0, [pc, #0x18]
  00138	1b000000	 blne        NKDbgPrintfW
  0013c		 |$cleanUp$47870|

; 506  : 
; 507  : cleanUp:
; 508  :     if (hFlash != NULL) OALFlashStoreClose(hFlash);

  0013c	e1a00006	 mov         r0, r6
  00140	eb000000	 bl          OALFlashStoreClose
  00144		 |$LN1@WriteFlash@3|

; 509  :     return rc;
; 510  : }

  00144	e1a00008	 mov         r0, r8
  00148	e28dd008	 add         sp, sp, #8
  0014c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00150	e12fff1e	 bx          lr
  00154		 |$LN29@WriteFlash@3|
  00154		 |$LN30@WriteFlash@3|
  00154	00000000	 DCD         |??_C@_1HA@OPDOICMP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@|
  00158		 |$LN31@WriteFlash@3|
  00158	00000000	 DCD         |??_C@_1CM@CMHKBBHI@?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  0015c		 |$LN32@WriteFlash@3|
  0015c	00000000	 DCD         |??_C@_1JK@INEHPIOE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  00160		 |$LN33@WriteFlash@3|
  00160	43454345	 DCD         0x43454345
  00164		 |$LN34@WriteFlash@3|
  00164	00000000	 DCD         |??_C@_1JO@HOPMBDBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg@|
  00168		 |$LN35@WriteFlash@3|
  00168	00000000	 DCD         |??_C@_1GO@DLIAFJMC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAF?$AAl?$AAa?$AAs?$AAh?$AAS?$AAt@|
  0016c		 |$LN36@WriteFlash@3|
  0016c	00000000	 DCD         |g_ulFlashBase|
  00170		 |$LN37@WriteFlash@3|
  00170	00000000	 DCD         |??_C@_1FA@LGNLEKHJ@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAE?$AAB?$AAO?$AAO?$AAT?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAf?$AAl?$AAa?$AAs?$AAh?$AA?5?$AAm@|
  00174		 |$LN38@WriteFlash@3|
  00174	00000000	 DCD         |dpCurSettings|
  00178		 |$M48508|

			 ENDP  ; |WriteFlashEBOOT|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|WriteFlashNK|
	EXPORT	|??_C@_1CG@EPLNNMDN@?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@DLJHBOIG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@NBKLFBCM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?5?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@NHAICGBK@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@ILFHOAHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@MOOCGNAB@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi@| [ DATA ] ; `string'
	IMPORT	|BP_WriteData|

  00000			 AREA	 |.pdata|, PDATA
|$T48556| DCD	|$LN24@WriteFlash@4|
	DCD	0xc0007902

  00000			 AREA	 |.xdata|, DATA
|$T48552| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPLNNMDN@?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "N"
	DCB	0x0, "K", 0x0, " ", 0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "t", 0x0, "e", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@DLJHBOIG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "O", 0x0, "S", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@NBKLFBCM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?5?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "S", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s"
	DCB	0x0, "m", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "!", 0x0, " "
	DCB	0x0, " ", 0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@NHAICGBK@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg@| DCB "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "h", 0x0, "N", 0x0, "K", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t"
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "b", 0x0, "r", 0x0, "a", 0x0, "r", 0x0, "y"
	DCB	0x0, "!", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@ILFHOAHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "W", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, "F", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "h", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, " "
	DCB	0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@MOOCGNAB@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "N", 0x0, "K", 0x0, " "
	DCB	0x0, "i", 0x0, "m", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "O", 0x0, "S", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T48552|

  00008		 |WriteFlashNK| PROC

; 519  : {

  00008		 |$LN24@WriteFlash@4|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24ddfe2	 sub         sp, sp, #0xE2, 30
  00010		 |$M48553|
  00010	e1a06001	 mov         r6, r1
  00014	e1a04000	 mov         r4, r0
  00018	e59f31c8	 ldr         r3, [pc, #0x1C8]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3384	 str         r3, [sp, #0x384]

; 520  :     BOOL rc = FALSE;
; 521  :     HANDLE hPartition;
; 522  :     UCHAR *pData;
; 523  :     PCI_REG_INFO regInfo;
; 524  : 
; 525  :     memset(&regInfo, 0, sizeof(PCI_REG_INFO));

  00024	e3a02d0e	 mov         r2, #0xE, 26
  00028	e3a01000	 mov         r1, #0
  0002c	e28d0004	 add         r0, sp, #4
  00030	e3a05000	 mov         r5, #0
  00034	eb000000	 bl          memset

; 526  :     regInfo.MemBase.Num    = 1;
; 527  :     regInfo.MemLen.Num     = 1;
; 528  :     regInfo.MemBase.Reg[0] = g_ulFlashBase;

  00038	e59f81a4	 ldr         r8, [pc, #0x1A4]

; 529  :     regInfo.MemLen.Reg[0]  = g_ulFlashLengthBytes;
; 530  : 
; 531  : 
; 532  :     OALLog(L"\r\nWriting NK image to OS partition\r\n");

  0003c	e59f019c	 ldr         r0, [pc, #0x19C]
  00040	e3a0e001	 mov         lr, #1
  00044	e5983000	 ldr         r3, [r8]
  00048	e5982004	 ldr         r2, [r8, #4]
  0004c	e3a01001	 mov         r1, #1
  00050	e58d3314	 str         r3, [sp, #0x314]
  00054	e58d2330	 str         r2, [sp, #0x330]
  00058	e58de310	 str         lr, [sp, #0x310]
  0005c	e58d132c	 str         r1, [sp, #0x32C]
  00060	eb000000	 bl          NKDbgPrintfW

; 533  : 
; 534  :     // Get data location
; 535  :     pData = OEMMapMemAddr(address, address);

  00064	e1a01004	 mov         r1, r4
  00068	e1a00004	 mov         r0, r4
  0006c	eb000000	 bl          OEMMapMemAddr
  00070	e1a07000	 mov         r7, r0

; 536  : 
; 537  :     // Verify that we get CE image.
; 538  :     if (!VerifyImage(pData, NULL))

  00074	e1a01007	 mov         r1, r7
  00078	e5b12040	 ldr         r2, [r1, #0x40]!
  0007c	e59f3158	 ldr         r3, [pc, #0x158]
  00080	e1520003	 cmp         r2, r3
  00084	1a000040	 bne         |$LN20@WriteFlash@4|
  00088	e5913008	 ldr         r3, [r1, #8]
  0008c	e0830007	 add         r0, r3, r7
  00090	eb000000	 bl          DumpTOC

; 543  :         goto cleanUp;
; 544  :         }
; 545  : 
; 546  :     // Initialize boot partition library
; 547  :     if (!BP_Init((LPBYTE)g_ulBPartBase, g_ulBPartLengthBytes, NULL, &regInfo, NULL))

  00094	e598100c	 ldr         r1, [r8, #0xC]
  00098	e5980008	 ldr         r0, [r8, #8]
  0009c	e3a0e000	 mov         lr, #0
  000a0	e28d3004	 add         r3, sp, #4
  000a4	e3a02000	 mov         r2, #0
  000a8	e58de000	 str         lr, [sp]
  000ac		 |$cleanUp$48539|
  000ac	eb000000	 bl          BP_Init
  000b0	e3500000	 cmp         r0, #0

; 548  :     {
; 549  :         OALLog(L"WriteFlashNK: Error initializing bootpart library!!\r\n");

  000b4	059f011c	 ldreq       r0, [pc, #0x11C]
  000b8	0a000038	 beq         |$LN21@WriteFlash@4|

; 550  :         goto cleanUp;
; 551  :     }
; 552  :     
; 553  :     // Open OS boot partition
; 554  :     hPartition = BP_OpenPartition((DWORD)NEXT_FREE_LOC, (DWORD)USE_REMAINING_SPACE, PART_BOOTSECTION, FALSE, PART_OPEN_EXISTING);

  000bc	e3a03001	 mov         r3, #1
  000c0	e3e00000	 mvn         r0, #0
  000c4	e58d3000	 str         r3, [sp]
  000c8	e3a03000	 mov         r3, #0
  000cc	e1a01000	 mov         r1, r0
  000d0	e3a02020	 mov         r2, #0x20
  000d4	eb000000	 bl          BP_OpenPartition
  000d8	e1a04000	 mov         r4, r0

; 555  :     if (hPartition == INVALID_HANDLE_VALUE)

  000dc	e3740001	 cmn         r4, #1
  000e0	1a000005	 bne         |$LN3@WriteFlash@4|

; 556  :     {
; 557  :         OALMSG(OAL_ERROR, (L"ERROR: OS partition not found!\r\n"));

  000e4	e59f30d4	 ldr         r3, [pc, #0xD4]
  000e8	e5933440	 ldr         r3, [r3, #0x440]
  000ec	e3130001	 tst         r3, #1
  000f0	0a00002b	 beq         |$cleanUp$47900|
  000f4	e59f00d8	 ldr         r0, [pc, #0xD8]

; 558  :         goto cleanUp;

  000f8	ea000028	 b           |$LN21@WriteFlash@4|
  000fc		 |$LN3@WriteFlash@4|

; 559  :     }
; 560  :     
; 561  :     // Check length against size of partition
; 562  :     if (!BP_SetDataPointer(hPartition, size))

  000fc	e1a01006	 mov         r1, r6
  00100	e1a00004	 mov         r0, r4
  00104	eb000000	 bl          BP_SetDataPointer
  00108	e3500000	 cmp         r0, #0
  0010c	1a000005	 bne         |$LN2@WriteFlash@4|

; 563  :     {
; 564  :         OALMSG(OAL_ERROR, (L"ERROR: OS partition too small!  Aborting...\r\n"));

  00110	e59f30a8	 ldr         r3, [pc, #0xA8]
  00114	e5933440	 ldr         r3, [r3, #0x440]
  00118	e3130001	 tst         r3, #1
  0011c	0a000020	 beq         |$cleanUp$47900|
  00120	e59f00a8	 ldr         r0, [pc, #0xA8]

; 565  :         goto cleanUp;

  00124	ea00001d	 b           |$LN21@WriteFlash@4|
  00128		 |$LN2@WriteFlash@4|

; 566  :     }
; 567  :     
; 568  :     // Write image to partition
; 569  :     BP_SetDataPointer(hPartition, 0);

  00128	e3a01000	 mov         r1, #0
  0012c	e1a00004	 mov         r0, r4
  00130	eb000000	 bl          BP_SetDataPointer

; 570  :     if (!BP_WriteData(hPartition, pData, size))

  00134	e1a02006	 mov         r2, r6
  00138	e1a01007	 mov         r1, r7
  0013c	e1a00004	 mov         r0, r4
  00140	eb000000	 bl          BP_WriteData
  00144	e3500000	 cmp         r0, #0
  00148	1a000005	 bne         |$LN1@WriteFlash@4|

; 571  :     {
; 572  :         OALMSG(OAL_ERROR, (L"ERROR: Failed writing to OS partition!\r\n"));

  0014c	e59f306c	 ldr         r3, [pc, #0x6C]
  00150	e5933440	 ldr         r3, [r3, #0x440]
  00154	e3130001	 tst         r3, #1
  00158	0a000011	 beq         |$cleanUp$47900|
  0015c	e59f0068	 ldr         r0, [pc, #0x68]

; 573  :         goto cleanUp;

  00160	ea00000e	 b           |$LN21@WriteFlash@4|
  00164		 |$LN1@WriteFlash@4|

; 574  :     }
; 575  :     
; 576  :     OALLog(L"NK image written\r\n");

  00164	e59f005c	 ldr         r0, [pc, #0x5C]
  00168	eb000000	 bl          NKDbgPrintfW

; 577  : 
; 578  :     // Change boot device to NAND
; 579  :     g_bootCfg.bootDevLoc.IfcType = Internal;

  0016c	e59f2050	 ldr         r2, [pc, #0x50]
  00170	e3a03000	 mov         r3, #0
  00174	e3a01302	 mov         r1, #2, 6
  00178	e5823008	 str         r3, [r2, #8]

; 580  :     g_bootCfg.bootDevLoc.LogicalLoc = BSP_NAND_REGS_PA + 0x20;

  0017c	e3813020	 orr         r3, r1, #0x20
  00180	e5823010	 str         r3, [r2, #0x10]

; 581  : 
; 582  :     // Done
; 583  :     rc = TRUE;

  00184	e3a05001	 mov         r5, #1
  00188	ea000005	 b           |$cleanUp$47900|
  0018c		 |$LN20@WriteFlash@4|

; 539  :         {
; 540  :         OALMSG(OAL_ERROR, (L"ERROR: OEMWriteFlash: "
; 541  :             L"NK image signature not found\r\n"
; 542  :             ));

  0018c	e59f302c	 ldr         r3, [pc, #0x2C]
  00190	e5933440	 ldr         r3, [r3, #0x440]
  00194	e3130001	 tst         r3, #1
  00198	0a000001	 beq         |$cleanUp$47900|
  0019c	e59f0018	 ldr         r0, [pc, #0x18]
  001a0		 |$LN21@WriteFlash@4|
  001a0	eb000000	 bl          NKDbgPrintfW

; 581  : 
; 582  :     // Done
; 583  :     rc = TRUE;

  001a4		 |$cleanUp$47900|

; 584  : 
; 585  : cleanUp:
; 586  :     return rc;

  001a4	e59d0384	 ldr         r0, [sp, #0x384]
  001a8	eb000000	 bl          __security_check_cookie

; 587  : }

  001ac	e1a00005	 mov         r0, r5
  001b0	e28ddfe2	 add         sp, sp, #0xE2, 30
  001b4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001b8	e12fff1e	 bx          lr
  001bc		 |$LN25@WriteFlash@4|
  001bc		 |$LN26@WriteFlash@4|
  001bc	00000000	 DCD         |??_C@_1GK@ILFHOAHO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AA?3?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAs@|
  001c0		 |$LN27@WriteFlash@4|
  001c0	00000000	 DCD         |dpCurSettings|
  001c4		 |$LN28@WriteFlash@4|
  001c4	00000000	 DCD         |g_bootCfg|
  001c8		 |$LN29@WriteFlash@4|
  001c8	00000000	 DCD         |??_C@_1CG@EPLNNMDN@?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  001cc		 |$LN30@WriteFlash@4|
  001cc	00000000	 DCD         |??_C@_1FC@DLJHBOIG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt@|
  001d0		 |$LN31@WriteFlash@4|
  001d0	00000000	 DCD         |??_C@_1FM@NBKLFBCM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AAo?$AA?5?$AAs?$AAm?$AAa?$AAl?$AAl?$AA?$CB?$AA?5?$AA?5@|
  001d4		 |$LN32@WriteFlash@4|
  001d4	00000000	 DCD         |??_C@_1EC@KEKCJKLC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?$CB?$AA?$AN?$AA?6@|
  001d8		 |$LN33@WriteFlash@4|
  001d8	00000000	 DCD         |??_C@_1GM@NHAICGBK@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAl?$AAa?$AAs?$AAh?$AAN?$AAK?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg@|
  001dc		 |$LN34@WriteFlash@4|
  001dc	43454345	 DCD         0x43454345
  001e0		 |$LN35@WriteFlash@4|
  001e0	00000000	 DCD         |??_C@_1EK@MOOCGNAB@?$AA?$AN?$AA?6?$AAW?$AAr?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAN?$AAK?$AA?5?$AAi?$AAm?$AAa?$AAg?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAO?$AAS?$AA?5?$AAp?$AAa?$AAr?$AAt?$AAi?$AAt?$AAi@|
  001e4		 |$LN36@WriteFlash@4|
  001e4	00000000	 DCD         |g_ulFlashBase|
  001e8		 |$LN37@WriteFlash@4|
  001e8	00000000	 DCD         |__security_cookie|
  001ec		 |$M48554|

			 ENDP  ; |WriteFlashNK|

	EXPORT	|BLFlashDownload|

  00000			 AREA	 |.pdata|, PDATA
|$T48581| DCD	|$LN11@BLFlashDow|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BLFlashDownload| PROC

; 111  : {

  00000		 |$LN11@BLFlashDow|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48578|
  00004	e1a02000	 mov         r2, r0

; 112  :     UINT32 rc = (UINT32) BL_ERROR;
; 113  : 
; 114  :     UNREFERENCED_PARAMETER(pBootDevices);
; 115  : 
; 116  :     // We have do device initialization for some devices
; 117  :     switch (pConfig->bootDevLoc.IfcType)

  00008	e5923008	 ldr         r3, [r2, #8]
  0000c	e3e00000	 mvn         r0, #0
  00010	e3530000	 cmp         r3, #0

; 118  :         {
; 119  :         case Internal:
; 120  :             switch (pConfig->bootDevLoc.LogicalLoc)

  00014	05922010	 ldreq       r2, [r2, #0x10]
  00018	03a03302	 moveq       r3, #2, 6
  0001c	03833020	 orreq       r3, r3, #0x20
  00020	01520003	 cmpeq       r2, r3

; 121  :                 {
; 122  :                 case BSP_NAND_REGS_PA + 0x20:
; 123  :                 rc = ReadFlashNK();

  00024	0b000000	 bleq        ReadFlashNK

; 124  :                 break;
; 125  :                 }
; 126  :             break;
; 127  :         }
; 128  : 
; 129  :     return rc;
; 130  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M48579|

			 ENDP  ; |BLFlashDownload|

	EXPORT	|OEMWriteFlash|

  00000			 AREA	 |.pdata|, PDATA
|$T48593| DCD	|$LN12@OEMWriteFl|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMWriteFlash| PROC

; 308  : {

  00000		 |$LN12@OEMWriteFl|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M48590|

; 309  :     BOOL rc;
; 310  : 
; 311  :     switch (g_eboot.type)

  00004	e59f3058	 ldr         r3, [pc, #0x58]
  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e3530003	 cmp         r3, #3
  00010	0a000010	 beq         |$LN5@OEMWriteFl|
  00014	e3530004	 cmp         r3, #4
  00018	0a00000b	 beq         |$LN4@OEMWriteFl|
  0001c	e3530006	 cmp         r3, #6
  00020	0a000006	 beq         |$LN2@OEMWriteFl|
  00024	e3530008	 cmp         r3, #8

; 324  :             break;
; 325  :         default:
; 326  :             rc = FALSE;

  00028	13a00000	 movne       r0, #0

; 327  :             break;
; 328  :         }
; 329  : 
; 330  :     return rc;
; 331  : }

  0002c	149de004	 ldrne       lr, [sp], #4
  00030	112fff1e	 bxne        lr

; 318  :             break;
; 319  : 		case DOWNLOAD_TYPE_LOGO:
; 320  :             rc = WriteFlashLogo(address, size);

  00034	eb000000	 bl          WriteFlashLogo

; 327  :             break;
; 328  :         }
; 329  : 
; 330  :     return rc;
; 331  : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$LN2@OEMWriteFl|

; 321  : 			break;
; 322  :         case DOWNLOAD_TYPE_FLASHNAND:
; 323  :             rc = WriteFlashNK(address, size);

  00040	eb000000	 bl          WriteFlashNK

; 327  :             break;
; 328  :         }
; 329  : 
; 330  :     return rc;
; 331  : }

  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$LN4@OEMWriteFl|

; 315  :             break;
; 316  :         case DOWNLOAD_TYPE_EBOOT:
; 317  :             rc = WriteFlashEBOOT(address, size);

  0004c	eb000000	 bl          WriteFlashEBOOT

; 327  :             break;
; 328  :         }
; 329  : 
; 330  :     return rc;
; 331  : }

  00050	e49de004	 ldr         lr, [sp], #4
  00054	e12fff1e	 bx          lr
  00058		 |$LN5@OEMWriteFl|

; 312  :         {
; 313  :         case DOWNLOAD_TYPE_XLDR:
; 314  :             rc = WriteFlashXLDR(address, size);

  00058	eb000000	 bl          WriteFlashXLDR

; 327  :             break;
; 328  :         }
; 329  : 
; 330  :     return rc;
; 331  : }

  0005c	e49de004	 ldr         lr, [sp], #4
  00060	e12fff1e	 bx          lr
  00064		 |$LN13@OEMWriteFl|
  00064		 |$LN14@OEMWriteFl|
  00064	00000000	 DCD         |g_eboot|
  00068		 |$M48591|

			 ENDP  ; |OEMWriteFlash|

	END
